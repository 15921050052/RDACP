--DROP TABLE T_DATASET;  --删除数据集表
--DROP TABLE T_DATASET_VAR;  --删除数据集变量表
--DROP TABLE T_SECTION_PARTITION;  --删除分段细分表
--DROP TABLE T_SECTION_PARTITION_VAR;  --删除分段细分变量表
--DROP TABLE T_CONDITION_PARTITION;  --删除条件细分表
--DROP TABLE T_CONDITION_PARTITION_NODE;  --删除条件细分节点表
--DROP TABLE T_RULE_TREE;  --删除决策树表
--DROP TABLE T_RULE_TREE_OUTPUT;  --删除决策树输出表
--DROP TABLE T_RULE_TABLE;  --删除决策表表
--DROP TABLE T_RULE_TABLE_INPUT;  --删除决策表输入表
--DROP TABLE T_RULE_TABLE_OUTPUT;  --删除决策表输出表
--DROP TABLE T_RULESET;  --删除规则集表
--DROP TABLE T_RULE;  --删除规则表
--DROP TABLE T_IPF_CCM_ENVIRONMENT;  --删除代码生成环境配置表
--DROP TABLE T_IPF_CCM_TEMPLATE;  --删除模板文件表
--DROP TABLE T_IPF_CCM_UI_LAYOUT;  --删除界面布局表
--DROP TABLE T_IPF_CCM_UI_LAYOUT_LIST;  --删除界面布局列表表
--DROP TABLE T_IPF_CCM_UI_LAYOUT_DETAIL;  --删除界面布局明细表
--DROP TABLE T_IPF_POI_SETTING;  --删除POI配置管理表
--DROP TABLE T_IPF_FCI_PROJECT;  --删除项目管理表
--DROP TABLE T_IPF_FCI_VIEW;  --删除视图管理表
--DROP TABLE T_IPF_FCI_VIEW_MEMBER;  --删除视图成员表
--DROP TABLE T_IPF_FCI_REVISION;  --删除视图修订号表
--DROP TABLE T_IPF_FCI_BUILD;  --删除视图编译号表
--DROP TABLE T_IPF_FCI_LABEL;  --删除基线管理表
--DROP TABLE T_IPF_FCI_LABEL_DETAIL;  --删除基线明细表
--DROP TABLE T_IPF_REQ_RULE;  --删除规则需求表表
--DROP TABLE T_IPF_DML_TABLE;  --删除表定义表
--DROP TABLE T_IPF_DML_COLUMN;  --删除表字段表
--DROP TABLE T_IPF_DML_CONSTRAINT;  --删除表约束表
--DROP TABLE T_IPF_DML_CONSTRAINT_COLUMN;  --删除表约束字段表
--DROP TABLE T_IPF_DML_INDEX;  --删除表索引表
--DROP TABLE T_IPF_DML_INDEX_COLUMN;  --删除表索引字段表
--DROP TABLE T_IPF_DML_VIEW;  --删除视图定义表
--DROP TABLE T_IPF_DML_VIEW_COLUMN;  --删除视图字段表
--DROP TABLE T_IPF_DML_VIEW_SQL;  --删除视图SQL表
--DROP TABLE T_IPF_DML_ELEMENT;  --删除数据元素表
--DROP TABLE T_IPF_DML_ELEMENT_TEXT;  --删除数据元素多语言表
--DROP TABLE T_IPF_DML_SCRIPT_PUBLISH;  --删除脚本发布表
--DROP TABLE T_IPF_CCM_BO;  --删除业务对象表
--DROP TABLE T_IPF_CCM_BO_CHECK_GROUP;  --删除对象校验分组表
--DROP TABLE T_IPF_CCM_BO_PROPERTY;  --删除属性定义表
--DROP TABLE T_IPF_CCM_BO_PROPERTY_CAS;  --删除属性动态过滤配置表
--DROP TABLE T_IPF_CCM_BO_GRID_COLUMN;  --删除管理页表
--DROP TABLE T_IPF_CCM_BO_GRID_TOOLBAR;  --删除管理页按钮表
--DROP TABLE T_IPF_CCM_BO_FORM_COLUMN;  --删除编辑页表
--DROP TABLE T_IPF_CCM_BO_CONTROL_EVENT;  --删除编辑页控件事件表
--DROP TABLE T_IPF_CCM_BO_FORM_TOOLBAR;  --删除编辑页按钮表
--DROP TABLE T_IPF_CCM_BO_METHOD;  --删除后台方法定义表表
--DROP TABLE T_IPF_CCM_BO_METHOD_PARAM;  --删除方法参数定义表表
--DROP TABLE T_IPF_CCM_BO_METHOD_RULE;  --删除方法规则调用表
--DROP TABLE T_IPF_CCM_BO_CHECK;  --删除数据校验表
--DROP TABLE T_IPF_CCM_BO_CHECK_FIELD;  --删除数据字段表
--DROP TABLE T_IPF_CCM_BO_CHECK_REL_GROUP;  --删除校验分组表
--DROP TABLE T_IPF_CCM_UI_LAYOUT_CONFIG;  --删除业务对象界面布局表
--DROP TABLE T_IPF_CCM_BO_FORM_CELL;  --删除表单珊格表
--DROP TABLE T_IPF_CCM_BO_RELATION;  --删除业务对象关系表
--DROP TABLE T_IPF_CCM_BO_PAGE;  --删除页面列表表
--DROP TABLE T_IPF_CCM_BO_PAGE_LAYOUT;  --删除页面布局表
--DROP TABLE T_IPF_CCM_BO_PG_LO_ELEMENT;  --删除布局元素定义表
--DROP TABLE T_IPF_CCM_DICT;  --删除字典类型表
--DROP TABLE T_IPF_CCM_DICT_VALUE;  --删除字典数据表
--DROP TABLE T_IPF_CCM_SHLP;  --删除搜索帮助表
--DROP TABLE T_IPF_CCM_SHLP_DETAIL;  --删除搜索帮助明细表
--DROP TABLE T_IPF_CCM_SHLP_TEXT;  --删除搜索帮助多语言表
--DROP TABLE T_IPF_RTM_TYPE;  --删除运行期配置类型表
--DROP TABLE T_IPF_RTM_TYPE_BO;  --删除运行期配置界面表
--DROP TABLE T_IPF_RTM_TYPE_BO_ATTR;  --删除运行期配置字段表
--DROP TABLE T_IPF_RTM_TYPE_BO_MAP;  --删除类型与BO对照表表
--DROP TABLE T_IPF_RTM_CONFIG;  --删除运行期配置表
--DROP TABLE T_IPF_RTM_CONFIG_ATTR;  --删除运行期配置明细表
--DROP TABLE T_IPF_RTM_CONFIG_ATTR_BO;  --删除运行期配置明细BO扩展表
--DROP TABLE T_IPF_SCHEDULE_JOB;  --删除定时任务表
--DROP TABLE T_IPF_CCM_NUMRULE;  --删除单号生成规则表
--DROP TABLE T_IPF_CCM_NUMRULE_LIST;  --删除单号生成规则历史表
--DROP TABLE T_IPF_CCM_BIZRULE;  --删除业务规则表
--DROP TABLE T_IPF_CCM_BIZRULE_DTL;  --删除规则明细表
--DROP TABLE T_IPF_CCM_BIZRULE_DTL_PARAM;  --删除规则明细参数表
--DROP TABLE T_IPF_CCM_STRATEGY;  --删除策略定义表
--DROP TABLE T_IPF_CCM_STRATEGY_PARAM;  --删除策略参数定义表
--DROP TABLE T_IPF_RULE_FILTER;  --删除筛选条件配置表
--DROP TABLE T_IPF_RULE_FILTER_DETAIL;  --删除筛选条件配置明细表
--DROP TABLE T_IPF_RULE_ROTATE;  --删除周转规则表
--DROP TABLE T_IPF_RULE_ROTATE_DETAIL;  --删除周转规则明细表
CREATE TABLE T_DATASET
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
DATASET_NAME  VARCHAR(50) COMMENT '数据集',
DATASET_DES  VARCHAR(200) COMMENT '数据集描述',
DATASET_TYPE  VARCHAR(50) COMMENT '类型',
REMARK  VARCHAR(1000) COMMENT '备注',
CONSTRAINT T_DATASET_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '数据集';
CREATE TABLE T_DATASET_VAR
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
DATASET_ID  VARCHAR(50) COMMENT '数据集',
VAR_NAME  VARCHAR(50) COMMENT '变量',
VAR_DES  VARCHAR(200) COMMENT '变量描述',
IS_DERIVED  VARCHAR(1) COMMENT '是否衍生',
IS_SET  VARCHAR(1) COMMENT '是否集合',
VAR_TYPE  VARCHAR(50) COMMENT '变量类型',
SPAN_BEGIN  VARCHAR(50) COMMENT '取值起始',
SPAN_END  VARCHAR(50) COMMENT '取值结束',
IS_OUTPUT  VARCHAR(1) COMMENT '是否输出',
DEF_VALUE  VARCHAR(50) COMMENT '缺省值',
REMARK  VARCHAR(1000) COMMENT '备注',
CONSTRAINT T_DATASET_VAR_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '数据集变量';
CREATE TABLE T_SECTION_PARTITION
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
SECTION_NAME  VARCHAR(200) COMMENT '分段模型',
STATUS  VARCHAR(50) COMMENT '状态',
MODIFY_DATE  VARCHAR(20) COMMENT '修改日期',
MODIFYED  VARCHAR(50) COMMENT '修改人',
OWNER  VARCHAR(50) COMMENT '所有人',
LOCKED  VARCHAR(50) COMMENT '锁定人',
CONSTRAINT T_SECTION_PARTITION_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '分段细分';
CREATE TABLE T_SECTION_PARTITION_VAR
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
SECTION_PARITION_ID  VARCHAR(50) COMMENT '分段模型',
VAR_NAME  VARCHAR(200) COMMENT '变量名称',
SECTION_LOWER_MARK  VARCHAR(50) COMMENT '下限符号',
SECTION_LOWER_LIMIT  VARCHAR(20) COMMENT '下限',
SECTION_UPPER_MARK  VARCHAR(50) COMMENT '上限符号',
SECTION_UPPER_LIMIT  VARCHAR(50) COMMENT '上限',
CONSTRAINT T_SECTION_PARTITION_VAR_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '分段细分变量';
CREATE TABLE T_CONDITION_PARTITION
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
CONDITION_NAME  VARCHAR(200) COMMENT '条件模型',
STATUS  VARCHAR(50) COMMENT '状态',
MODIFY_DATE  VARCHAR(20) COMMENT '修改日期',
MODIFYED  VARCHAR(50) COMMENT '修改人',
OWNER  VARCHAR(50) COMMENT '所有人',
LOCKED  VARCHAR(50) COMMENT '锁定人',
CONSTRAINT T_CONDITION_PARTITION_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '条件细分';
CREATE TABLE T_CONDITION_PARTITION_NODE
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
CON_PARTITION_ID  VARCHAR(50) COMMENT '条件模型',
CON_NODE_NAME  VARCHAR(200) COMMENT '节点名称',
RELATION_MARK  VARCHAR(50) COMMENT '关系符',
VAR_NAME  VARCHAR(20) COMMENT '变量',
OPT_CHAR  VARCHAR(50) COMMENT '操作符',
COMPARE_VALUE  VARCHAR(50) COMMENT '对比值',
CONSTRAINT T_CONDITION_PARTITION_NODE_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '条件细分节点';
CREATE TABLE T_RULE_TREE
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
RULE_TREE_NAME  VARCHAR(200) COMMENT '决策树',
VERSION  VARCHAR(50) COMMENT '版本',
STATUS  VARCHAR(50) COMMENT '状态',
OUTPUT_WAY  VARCHAR(1) COMMENT '输出方式',
MODIFY_DATE  VARCHAR(20) COMMENT '修改日期',
MODIFYED  VARCHAR(50) COMMENT '修改人',
OWNER  VARCHAR(50) COMMENT '所有人',
LOCKED  VARCHAR(50) COMMENT '锁定人',
CONSTRAINT T_RULE_TREE_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '决策树';
CREATE TABLE T_RULE_TREE_OUTPUT
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
RULE_TREE_ID  VARCHAR(50) COMMENT '决策树',
TREE_NODE_CODE  VARCHAR(50) COMMENT '节点代码',
TREE_NODE_NAME  VARCHAR(200) COMMENT '节点名称',
OUTPUT_VER  VARCHAR(50) COMMENT '输出变量',
OUTPUT_VALUE  VARCHAR(50) COMMENT '输出值',
CONSTRAINT T_RULE_TREE_OUTPUT_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '决策树输出';
CREATE TABLE T_RULE_TABLE
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
RULE_TABLE_NAME  VARCHAR(200) COMMENT '决策表',
VERSION  VARCHAR(50) COMMENT '版本',
STATUS  VARCHAR(50) COMMENT '状态',
MODIFY_DATE  VARCHAR(20) COMMENT '修改日期',
MODIFYED  VARCHAR(50) COMMENT '修改人',
OWNER  VARCHAR(50) COMMENT '所有人',
LOCKED  VARCHAR(50) COMMENT '锁定人',
CONSTRAINT T_RULE_TABLE_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '决策表';
CREATE TABLE T_RULE_TABLE_INPUT
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
RULE_TABLE_ID  VARCHAR(200) COMMENT '决策表',
OUTPUT_LOCATION  VARCHAR(50) COMMENT '输出定位',
INPUT_VAR  VARCHAR(50) COMMENT '输入变量',
INPUT_VALUE  VARCHAR(50) COMMENT '输入值',
CONSTRAINT T_RULE_TABLE_INPUT_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '决策表输入';
CREATE TABLE T_RULE_TABLE_OUTPUT
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
RULE_TABLE_ID  VARCHAR(200) COMMENT '决策表',
OUTPUT_LOCATION  VARCHAR(50) COMMENT '输出定位',
OUTPUT_VAR  VARCHAR(20) COMMENT '输出变量',
OUTPUT_VALUE  VARCHAR(50) COMMENT '输出值',
CONSTRAINT T_RULE_TABLE_OUTPUT_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '决策表输出';
CREATE TABLE T_RULESET
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
RULESET_NAME  VARCHAR(200) COMMENT '规则集',
VERSION  VARCHAR(50) COMMENT '版本',
STATUS  VARCHAR(50) COMMENT '状态',
MODIFY_DATE  VARCHAR(20) COMMENT '修改日期',
MODIFYED  VARCHAR(50) COMMENT '修改人',
OWNER  VARCHAR(50) COMMENT '所有人',
LOCKED  VARCHAR(50) COMMENT '锁定人',
CONSTRAINT T_RULESET_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '规则集';
CREATE TABLE T_RULE
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
RULE_NAME  VARCHAR(200) COMMENT '规则',
RULESET_ID  VARCHAR(50) COMMENT '规则集',
IS_USED  VARCHAR(1) COMMENT '是否有效',
PRI_LEVEL  VARCHAR(1) COMMENT '优先级',
CONTENT_TYPE  VARCHAR(50) COMMENT '内容类别',
EFFECT_DATE  VARCHAR(20) COMMENT '生效日期',
INVALID_DATE  VARCHAR(20) COMMENT '失效日期',
CREATOR  VARCHAR(50) COMMENT '创建人',
CREATE_DATE  VARCHAR(20) COMMENT '创建日期',
MODIFY_DATE  VARCHAR(20) COMMENT '修改日期',
MODIFYED  VARCHAR(50) COMMENT '修改人',
OWNER  VARCHAR(50) COMMENT '所有人',
LOCKED  VARCHAR(50) COMMENT '锁定人',
CONSTRAINT T_RULE_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '规则';
CREATE TABLE T_IPF_CCM_ENVIRONMENT
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
USER_CODE  VARCHAR(200) COMMENT '工程代码',
PROJECT_NAME  VARCHAR(50) COMMENT '工程名称',
PROJECT_PATH  VARCHAR(1) COMMENT '工程路径',
SRC_PATH  VARCHAR(1) COMMENT '原代码路径',
TEMPLATE_PATH  VARCHAR(50) COMMENT '模板工程目录',
WEB_CONTENT_NAME  VARCHAR(20) COMMENT '模板工程名称',
TARGET_PROJECT_NAME  VARCHAR(20) COMMENT '分支工程名称',
TARGET_PROJECT_PATH  VARCHAR(50) COMMENT '分支工程路径',
CONSTRAINT T_IPF_CCM_ENVIRONMENT_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '代码生成环境配置';
CREATE TABLE T_IPF_CCM_TEMPLATE
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
TEMPLATE_FILE  VARCHAR(200) COMMENT '模板文件',
TEMPLATE_DESC  VARCHAR(200) COMMENT '模板描述',
TEMPLATE_TYPE  VARCHAR(20) COMMENT '模板类型',
CONSTRAINT T_IPF_CCM_TEMPLATE_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '模板文件';
CREATE TABLE T_IPF_CCM_UI_LAYOUT
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
UI_LAYOUT_NAME  VARCHAR(50) COMMENT '名称',
DESCRIPTION  VARCHAR(50) COMMENT '描述',
CONSTRAINT T_IPF_CCM_UI_LAYOUT_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '界面布局';
CREATE TABLE T_IPF_CCM_UI_LAYOUT_LIST
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_CCM_UI_LAYOUT_ID  VARCHAR(50) COMMENT '界面布局',
PAGE_NAME  VARCHAR(50) COMMENT '名称',
DESCRIPTION  VARCHAR(50) COMMENT '描述',
IMAGE_PATH  VARCHAR(200) COMMENT '图片路径',
CONSTRAINT T_IPF_CCM_UI_LAYOUT_LIST_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '界面布局列表';
CREATE TABLE T_IPF_CCM_UI_LAYOUT_DETAIL
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_CCM_UI_LAYOUT_ID  VARCHAR(50) COMMENT '界面布局',
IPF_CCM_UI_LAYOUT_LIST_ID  VARCHAR(50) COMMENT '界面布局列表',
LAYOUT_ELEMENT_NAME  VARCHAR(50) COMMENT '名称',
DESCRIPTION  VARCHAR(50) COMMENT '描述',
CONSTRAINT T_IPF_CCM_UI_LAYOUT_DETAIL_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '界面布局明细';
CREATE TABLE T_IPF_POI_SETTING
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
BO_NAME  VARCHAR(50) COMMENT '业务对象名称',
POI_TYPE  VARCHAR(20) COMMENT '导入导出类型',
TEMPLATE_FILE_NAME  VARCHAR(50) COMMENT '模板文件名称',
TEMPLATE_URL  VARCHAR(50) COMMENT '模板地址',
FILE_NAME  VARCHAR(50) COMMENT '导入导出文件名',
SOURCE_SERVICE  VARCHAR(200) COMMENT '请求数据路径',
CLASS_NAME  VARCHAR(50) COMMENT 'POI对象全名',
TEMPLATE_EXT_NAME  VARCHAR(50) COMMENT '模板文件扩展名',
RULE_NO  VARCHAR(50) COMMENT '导入规则号',
DICT_NAME  VARCHAR(50) COMMENT '数据字典路径',
DEAL_SERVICE  VARCHAR(50) COMMENT '结果处理服务',
METHODE_NAME  VARCHAR(50) COMMENT '结果处理服务方法名',
IS_ASYNC  VARCHAR(50) COMMENT '是否异步下载',
ASYNC_PAGE_SIZE  VARCHAR(50) COMMENT '异步每页行数',
TEMPLATE  VARCHAR(2000) COMMENT '模板内容',
TEMPLATE_FILE_KEY  VARCHAR(50) COMMENT '模板文件KEY',
PRIMARY_COLUMNS  VARCHAR(50) COMMENT '主键指定',
CHILDREN_TABLE  VARCHAR(50) COMMENT '子表信息定义类',
SORT_EXPRESS  VARCHAR(2000) COMMENT '排序表达式',
ALLOW_PARAMETER  VARCHAR(50) COMMENT '是否接收参数',
DEFINE_COLUMN  VARCHAR(50) COMMENT '导入字段定义',
CONSTRAINT T_IPF_POI_SETTING_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT 'POI配置管理';
CREATE TABLE T_IPF_FCI_PROJECT
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
PROJECT_NAME  VARCHAR(50) COMMENT '项目名称',
PROJECT_TYPE  VARCHAR(50) COMMENT '项目类型',
PROJECT_DES  VARCHAR(200) COMMENT '项目描述',
DEFAULT_VIEW_ID  VARCHAR(50) COMMENT '默认视图',
SVN_REPOSITORY_PATH  VARCHAR(200) COMMENT 'SVN路径',
SVN_USER  VARCHAR(50) COMMENT 'SVN帐户',
SVN_PASSWORD  VARCHAR(50) COMMENT 'SVN密码',
MAX_REVISON_NUMBER  VARCHAR(50) COMMENT '最大修订号',
DD_LANGUAGE  VARCHAR(50) COMMENT '默认语言',
DB_TYPE  VARCHAR(50) COMMENT '数据库类型',
DB_VERSION  VARCHAR(20) COMMENT '数据库版本号',
IS_ACTIVE  VARCHAR(20) COMMENT '启用',
CONSTRAINT T_IPF_FCI_PROJECT_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '项目管理';
CREATE TABLE T_IPF_FCI_VIEW
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
VIEW_NAME  VARCHAR(50) COMMENT '视图名称',
PROJECT_NAME  VARCHAR(50) COMMENT '项目名称',
VIEW_DESC  VARCHAR(50) COMMENT '视图描述',
SVN_BRANCHES_PATH  VARCHAR(200) COMMENT 'SVN路径',
IS_ACTIVE  VARCHAR(20) COMMENT '启用',
CONNECTION_STRING  VARCHAR(1000) COMMENT '目标数据库连接',
IPF_FCI_PROJECT_ID  VARCHAR(50) COMMENT '所属项目',
SOURCE_LABEL_ID  VARCHAR(50) COMMENT '基线名称',
IS_PERMISSION_PAGE_ONLY  VARCHAR(20) COMMENT '只生成页面权限',
CONSTRAINT T_IPF_FCI_VIEW_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '视图管理';
CREATE TABLE T_IPF_FCI_VIEW_MEMBER
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_FCI_VIEW_ID  VARCHAR(50) COMMENT '视图',
CONFIG_ITEM_TYPE  VARCHAR(50) COMMENT '配置项类型',
CONFIG_ITEM_CODE  VARCHAR(50) COMMENT '配置项代码',
CONFIG_ITEM_ID  VARCHAR(50) COMMENT '配置项ID',
REVISION_NUMBER  VARCHAR(50) COMMENT '修订号',
SOURCE_TYPE  VARCHAR(50) COMMENT '来源类型',
SOURCE_ITEM_ID  VARCHAR(50) COMMENT '来源',
RELATION_MEMBER_ID  VARCHAR(50) COMMENT '关联成员',
IS_LOCK  VARCHAR(50) COMMENT '锁定状态',
LOCK_USER  VARCHAR(50) COMMENT '锁定人',
LOCK_TIME  VARCHAR(20) COMMENT '锁定时间',
IS_ACTIVE  VARCHAR(20) COMMENT '启用',
CONSTRAINT T_IPF_FCI_VIEW_MEMBER_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '视图成员';
CREATE TABLE T_IPF_FCI_REVISION
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_FCI_VIEW_ID  VARCHAR(50) COMMENT '视图',
IPF_FCI_PROJECT_ID  VARCHAR(50) COMMENT '项目',
REVISION_NUMBER  VARCHAR(50) COMMENT '修订号',
REMARK  VARCHAR(1000) COMMENT '备注',
CONSTRAINT T_IPF_FCI_REVISION_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '视图修订号';
CREATE TABLE T_IPF_FCI_BUILD
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_FCI_VIEW_ID  VARCHAR(50) COMMENT '视图',
IPF_FCI_PROJECT_ID  VARCHAR(50) COMMENT '项目',
MAJOR_VERSION  VARCHAR(50) COMMENT '主版本号',
MINOR_VERSION  VARCHAR(50) COMMENT '次版本号',
MAX_VERSION_BUILD_NUMBER  VARCHAR(50) COMMENT '最大版本编译号',
IS_DEFAULT  VARCHAR(20) COMMENT '是否默认',
CONSTRAINT T_IPF_FCI_BUILD_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '视图编译号';
CREATE TABLE T_IPF_FCI_LABEL
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_FCI_VIEW_ID  VARCHAR(50) COMMENT '视图',
LABEL_NAME  VARCHAR(50) COMMENT '基线名称',
LABEL_DESC  VARCHAR(200) COMMENT '基线描述',
IPF_FCI_BUILD_ID  VARCHAR(50) COMMENT '编译号',
MAJOR_VERSION  VARCHAR(50) COMMENT '主版本号',
MINOR_VERSION  VARCHAR(50) COMMENT '次版本号',
VERSION_BUILD_NUMBER  VARCHAR(50) COMMENT '版本编译号',
REVISION_NUMBER  VARCHAR(50) COMMENT '修订号',
SVN_REVISION  VARCHAR(50) COMMENT 'SVN修订号',
SVN_TAGS_PATH  VARCHAR(1000) COMMENT 'SVN基线路径',
IS_ACTIVE  VARCHAR(20) COMMENT '启用',
VIEW_NAME  VARCHAR(50) COMMENT '视图名称',
CONSTRAINT T_IPF_FCI_LABEL_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '基线管理';
CREATE TABLE T_IPF_FCI_LABEL_DETAIL
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_FCI_LABEL_ID  VARCHAR(50) COMMENT '基线',
IPF_FCI_VIEW_ID  VARCHAR(50) COMMENT '视图',
CONFIG_ITEM_TYPE  VARCHAR(50) COMMENT '配置项名称',
CONFIG_ITEM_CODE  VARCHAR(50) COMMENT '配置项代码',
CONFIG_ITEM_ID  VARCHAR(50) COMMENT '配置项ID',
REVISION_NUMBER  VARCHAR(50) COMMENT '修订号',
RELATION_MEMBER_ID  VARCHAR(50) COMMENT '关联成员',
IS_ACTIVE  VARCHAR(20) COMMENT '启用',
CONSTRAINT T_IPF_FCI_LABEL_DETAIL_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '基线明细';
CREATE TABLE T_IPF_REQ_RULE
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
RULE_NAME  VARCHAR(50) COMMENT '规则名称',
RULE_NO  VARCHAR(50) COMMENT '规则号',
RULE_TYPE  VARCHAR(50) COMMENT '规则类型',
RULE_STATUS  VARCHAR(50) COMMENT '规则状态',
TRIGGER_TYPE  VARCHAR(50) COMMENT '触发类型',
PHYSICAL_LOCATION  VARCHAR(50) COMMENT '所处物理位置',
ACTION_TYPE  VARCHAR(50) COMMENT '动作类型',
BUSINESS_LOCATION  VARCHAR(50) COMMENT '所处业务位置',
BUSINESS_MODULE  VARCHAR(50) COMMENT '业务模块',
DROOLS_ATTRIBUTE  VARCHAR(1000) COMMENT '规则属性',
RULE_DESC  VARCHAR(50) COMMENT '规则描述',
IS_DECISION_TABLE  VARCHAR(20) COMMENT '是否使用决策表',
PUBLIC_TYPE  VARCHAR(50) COMMENT '共享类型',
IPF_CCM_BO_ID  VARCHAR(50) COMMENT '业务对象',
IMPORT_DESC  VARCHAR(50) COMMENT '传参说明',
DROOLS_WHEN  VARCHAR(1000) COMMENT 'DROOLS条件',
DROOLS_THEN  VARCHAR(1000) COMMENT 'DROOLS动作',
REMARK  VARCHAR(1000) COMMENT '备注',
CONSTRAINT T_IPF_REQ_RULE_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '规则需求表';
CREATE TABLE T_IPF_DML_TABLE
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
TABLE_NAME  VARCHAR(50) COMMENT '表名',
TABLE_TYPE  VARCHAR(50) COMMENT '表类型',
TABLE_DESC  VARCHAR(50) COMMENT '表描述',
CONSTRAINT T_IPF_DML_TABLE_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '表定义';
CREATE TABLE T_IPF_DML_COLUMN
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_DML_TABLE_ID  VARCHAR(50) COMMENT '表名',
COLUMN_NAME  VARCHAR(50) COMMENT '字段名称',
IPF_DML_ELEMENT_ID  VARCHAR(50) COMMENT '数据元素ID',
ELEMENT_CODE  VARCHAR(50) COMMENT '数据元素代码',
FIELD_TEXT  VARCHAR(200) COMMENT '显示文本',
DATA_TYPE  VARCHAR(50) COMMENT '数据类型',
FIELD_LENGTH  VARCHAR(50) COMMENT '字段长度',
DECIMALS  VARCHAR(50) COMMENT '小数位',
IS_NOT_NULL  VARCHAR(20) COMMENT '非空',
IS_PRIMARY_KEY  VARCHAR(20) COMMENT '主键',
DEFAULT_VALUE  VARCHAR(50) COMMENT '默认值',
INIT_VALUE  VARCHAR(50) COMMENT '初始值',
CONSTRAINT T_IPF_DML_COLUMN_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '表字段';
CREATE TABLE T_IPF_DML_CONSTRAINT
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_DML_TABLE_ID  VARCHAR(50) COMMENT '表名',
CONSTRAINT_NAME  VARCHAR(50) COMMENT '约束名称',
CONSTRAINT_TYPE  VARCHAR(50) COMMENT '约束类型',
COLUMN_NAME  VARCHAR(50) COMMENT '字段名称',
FOREIGN_TABLE_NAME  VARCHAR(50) COMMENT '外关联表名',
FOREIGN_COLUMN_NAME  VARCHAR(50) COMMENT '外关联字段名',
CONSTRAINT T_IPF_DML_CONSTRAINT_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '表约束';
CREATE TABLE T_IPF_DML_CONSTRAINT_COLUMN
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_DML_CONSTRAINT_ID  VARCHAR(50) COMMENT '约束',
COLUMN_NAME  VARCHAR(50) COMMENT '字段名称',
CONSTRAINT T_IPF_DML_CONSTRAINT_COLUMN_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '表约束字段';
CREATE TABLE T_IPF_DML_INDEX
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_DML_TABLE_ID  VARCHAR(50) COMMENT '表名',
INDEX_NAME  VARCHAR(50) COMMENT '索引名称',
INDEX_TYPE  VARCHAR(50) COMMENT '索引类型',
CONSTRAINT T_IPF_DML_INDEX_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '表索引';
CREATE TABLE T_IPF_DML_INDEX_COLUMN
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_DML_INDEX_ID  VARCHAR(50) COMMENT '索引',
COLUMN_NAME  VARCHAR(50) COMMENT '字段名称',
INDEX_OPTION  VARCHAR(1000) COMMENT '索引选项',
CONSTRAINT T_IPF_DML_INDEX_COLUMN_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '表索引字段';
CREATE TABLE T_IPF_DML_VIEW
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
VIEW_NAME  VARCHAR(50) COMMENT '视图名称',
VIEW_DES  VARCHAR(1000) COMMENT '视图描述',
VIEW_TYPE  VARCHAR(50) COMMENT '视图类型',
CONSTRAINT T_IPF_DML_VIEW_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '视图定义';
CREATE TABLE T_IPF_DML_VIEW_COLUMN
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_DML_VIEW_ID  VARCHAR(50) COMMENT '视图',
COLUMN_NAME  VARCHAR(50) COMMENT '字段名称',
FIELD_TEXT  VARCHAR(50) COMMENT '字段标题',
DATA_TYPE  VARCHAR(50) COMMENT '数据类型',
FIELD_LENGTH  VARCHAR(50) COMMENT '字段长度',
DECIMALS  VARCHAR(20) COMMENT '小数位',
IS_NOT_NULL  VARCHAR(20) COMMENT '非空',
IS_PRIMARY_KEY  VARCHAR(20) COMMENT '主键',
CONSTRAINT T_IPF_DML_VIEW_COLUMN_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '视图字段';
CREATE TABLE T_IPF_DML_VIEW_SQL
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_DML_VIEW_ID  VARCHAR(50) COMMENT '视图',
DBMS_TYPE  VARCHAR(50) COMMENT '数据库类型',
SQL_STATEMENT  VARCHAR(2000) COMMENT 'SQL表达式',
CONSTRAINT T_IPF_DML_VIEW_SQL_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '视图SQL';
CREATE TABLE T_IPF_DML_ELEMENT
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
ELEMENT_CODE  VARCHAR(50) COMMENT '数据元素代码',
FIELD_TEXT  VARCHAR(200) COMMENT '显示文本',
DATA_TYPE  VARCHAR(50) COMMENT '数据类型',
FIELD_LENGTH  VARCHAR(50) COMMENT '字段长度',
DECIMALS  VARCHAR(50) COMMENT '小数位',
CONSTRAINT T_IPF_DML_ELEMENT_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '数据元素';
CREATE TABLE T_IPF_DML_ELEMENT_TEXT
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_DML_ELEMENT_ID  VARCHAR(50) COMMENT '数据元素',
DD_LANGUAGE  VARCHAR(50) COMMENT '语言',
DD_TEXT  VARCHAR(1000) COMMENT '文本描述',
CONSTRAINT T_IPF_DML_ELEMENT_TEXT_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '数据元素多语言';
CREATE TABLE T_IPF_DML_SCRIPT_PUBLISH
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
FILE_NAME  VARCHAR(50) COMMENT '文件名称',
FILE_DES  VARCHAR(50) COMMENT '文件描述',
FILE_CONTENT  VARCHAR(2000) COMMENT '文件内容',
IS_PUBLISHED  VARCHAR(20) COMMENT '已发布',
CONSTRAINT T_IPF_DML_SCRIPT_PUBLISH_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '脚本发布';
CREATE TABLE T_IPF_CCM_BO
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
BO_NAME  VARCHAR(50) COMMENT '业务对象名',
BO_TYPE  VARCHAR(50) COMMENT '对象类型',
APP_MODULE  VARCHAR(50) COMMENT '功能模块',
SERVICE_TYPE  VARCHAR(50) COMMENT '服务类型',
JAVA_PATH  VARCHAR(1000) COMMENT 'JAVA路径',
SERVICE_CATEGORY  VARCHAR(50) COMMENT '服务分类',
TABLE_NAME  VARCHAR(50) COMMENT '表名',
TABLE_TYPE  VARCHAR(50) COMMENT '表类型',
DESCRIPTION  VARCHAR(200) COMMENT '描述',
SEARCH_COLUMNS  VARCHAR(50) COMMENT '查询条件列数',
SEARCH_MODE  VARCHAR(50) COMMENT '查询模式',
PAGE_SIZE  VARCHAR(50) COMMENT '每页记录',
IPF_CCM_UI_LAYOUT_ID  VARCHAR(50) COMMENT '界面布局ID',
UI_LAYOUT_NAME  VARCHAR(50) COMMENT '界面布局名称',
FORM_CELL_MODE  VARCHAR(50) COMMENT '界面模式',
UI_TEMPLATE  VARCHAR(50) COMMENT '界面模板',
FORM_COLUMNS  VARCHAR(50) COMMENT '每行列数',
GRID_STYLE  VARCHAR(50) COMMENT '表格样式',
GRID_ALIGN  VARCHAR(50) COMMENT '表格列对齐',
GRID_EDIT_TYPE  VARCHAR(50) COMMENT '表格维护方式',
GENERATE_OPTION  VARCHAR(200) COMMENT '代码生成选项',
LOCK_ROW_EXPRESS  VARCHAR(2000) COMMENT '行锁定表达式',
GRID_TYPE  VARCHAR(50) COMMENT '表格类型',
IS_MAIN_OBJECT  VARCHAR(20) COMMENT '主对象',
IS_INIT_DATA_BO  VARCHAR(20) COMMENT '初始化数据对象',
IS_AUTO_LOAD  VARCHAR(20) COMMENT '自动查询',
IS_NEED_ADV_SEARCH  VARCHAR(20) COMMENT '需高级查询',
NEED_PAGING  VARCHAR(50) COMMENT '表格分页',
IS_GRID_FILTER  VARCHAR(20) COMMENT '表格列筛选',
IS_GRID_CUSTOM  VARCHAR(20) COMMENT '表格列定义',
REMARK  VARCHAR(1000) COMMENT '备注',
WHERE_CLAUSE  VARCHAR(2000) COMMENT 'WHERE条件',
ID_GENERATOR  VARCHAR(20) COMMENT 'ID生成器名称',
CONSTRAINT T_IPF_CCM_BO_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '业务对象';
CREATE TABLE T_IPF_CCM_BO_CHECK_GROUP
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_CCM_BO_ID  VARCHAR(50) COMMENT '业务对象',
GROUP_NAME  VARCHAR(50) COMMENT '分组名称',
GROUP_DESC  VARCHAR(200) COMMENT '分组描述',
CONSTRAINT T_IPF_CCM_BO_CHECK_GROUP_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '对象校验分组';
CREATE TABLE T_IPF_CCM_BO_PROPERTY
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
PROPERTY_NAME  VARCHAR(50) COMMENT '属性名',
COLUMN_NAME  VARCHAR(50) COMMENT '字段名',
PROPERTY_TYPE  VARCHAR(50) COMMENT '属性类型',
SUB_BO_LAYOUT_TYPE  VARCHAR(50) COMMENT '布局类型',
TABLE_NAME  VARCHAR(50) COMMENT '表名',
MAX_VALUE  VARCHAR(50) COMMENT '最大值',
MIN_VALUE  VARCHAR(50) COMMENT '最小值',
ELEMENT_CODE  VARCHAR(50) COMMENT '数据元素代码',
FIELD_TEXT  VARCHAR(1000) COMMENT '显示文本',
DATA_TYPE  VARCHAR(50) COMMENT '数据类型',
FIELD_LENGTH  VARCHAR(50) COMMENT '字段长度',
DECIMALS  VARCHAR(50) COMMENT '小数位',
IS_NOT_NULL  VARCHAR(20) COMMENT '非空',
IS_KEY  VARCHAR(20) COMMENT '主键',
SUB_BO_NAME  VARCHAR(50) COMMENT '子业务对象名',
SUB_BO_REL_TYPE  VARCHAR(50) COMMENT '关联BO类型',
SUB_BO_REL_PRO  VARCHAR(50) COMMENT '关系对象属性',
SUB_BO_ORDER_NO  VARCHAR(50) COMMENT '子业务对象的排序号',
PERSISTENT_SAVE_TYPE  VARCHAR(50) COMMENT '子业务对象保存方式',
REL_SUB_BO_PRO_NAME  VARCHAR(50) COMMENT '关联子业务对象属性名称',
SEARCH_HELP  VARCHAR(50) COMMENT '搜索帮助名',
REF_PRO_NAME  VARCHAR(50) COMMENT '搜索帮助关联属性',
DICT_TABLE_NAME  VARCHAR(50) COMMENT '字典表',
DICT_GROUP_VALUE  VARCHAR(50) COMMENT '字典分组值',
FETCH_WAY  VARCHAR(50) COMMENT '取数方式',
FIX_VALUE  VARCHAR(50) COMMENT '取数固定值',
VALUE_EXPRESSION  VARCHAR(2000) COMMENT '取数表达式',
VLAUE_RULE_NO  VARCHAR(50) COMMENT '取数规则号',
PRE_CONDITION  VARCHAR(2000) COMMENT '前提条件',
OPT_CONDITION  VARCHAR(2000) COMMENT '选择条件',
IS_SURCHARGE  VARCHAR(20) COMMENT '附加费',
IS_REALTIME_CALCULATE  VARCHAR(20) COMMENT '实时计算',
RP_TYPE  VARCHAR(20) COMMENT '收付类型',
CUST_ID_PROPERTY_NAME  VARCHAR(50) COMMENT '客户代码属性名称',
BUSINESS_DATE_PROPERTY_NAME  VARCHAR(50) COMMENT '业务日期属性名称',
IPF_CCM_BO_ID  VARCHAR(50) COMMENT '所属业务对象',
AUTH_FIELD  VARCHAR(50) COMMENT '授权字段',
HELP_INDEX  VARCHAR(50) COMMENT '帮助索引号',
NUMBER_OBJECT_ID  VARCHAR(50) COMMENT '号码对象ID',
REL_BO_METHOD  VARCHAR(50) COMMENT '关联业务对象方法名',
REL_BO_NAME  VARCHAR(50) COMMENT '关联业务对象名',
SH_TABLE  VARCHAR(50) COMMENT '搜索帮助表或视图',
SH_VALUE_COLUMN  VARCHAR(50) COMMENT '值字段',
VALIDACTION_TYPE  VARCHAR(50) COMMENT '数据校验类型',
VALIDACTION_REGEX  VARCHAR(50) COMMENT '数据校验正则表达式',
CONSTRAINT T_IPF_CCM_BO_PROPERTY_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '属性定义';
CREATE TABLE T_IPF_CCM_BO_PROPERTY_CAS
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_CCM_BO_PROPERTY_ID  VARCHAR(50) COMMENT '属性',
CASCADE_PROPERTY_ID  VARCHAR(50) COMMENT '级联属性',
OPERATION  VARCHAR(50) COMMENT '操作符',
TARGET_PROPERTY_NAME  VARCHAR(50) COMMENT '目标属性名称',
TYPE  VARCHAR(50) COMMENT '类型',
CONSTRAINT T_IPF_CCM_BO_PROPERTY_CAS_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '属性动态过滤配置';
CREATE TABLE T_IPF_CCM_BO_GRID_COLUMN
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_CCM_BO_ID  VARCHAR(50) COMMENT '业务对象',
DEFAULT_VALUE  VARCHAR(50) COMMENT '初始值',
IS_CONDITION  VARCHAR(20) COMMENT '查询条件',
IS_RANGE  VARCHAR(20) COMMENT '区间查询条件',
CORRECT_TYPE  VARCHAR(50) COMMENT '转换类型',
IS_SUM  VARCHAR(20) COMMENT '汇总',
IS_NOT_NULL  VARCHAR(20) COMMENT '非空',
IS_ORDER_BY  VARCHAR(20) COMMENT '排序',
PROPERTY_NAME  VARCHAR(50) COMMENT '属性名',
PROPERTY_TYPE  VARCHAR(50) COMMENT '属性类型',
UI_TYPE  VARCHAR(50) COMMENT '组件类型',
COLUMN_NO  VARCHAR(50) COMMENT '列号',
IS_READ_ONLY  VARCHAR(20) COMMENT '只读',
IS_VISIBLE  VARCHAR(20) COMMENT '显示',
WIDTH  VARCHAR(50) COMMENT '列宽',
PROPERTY_ID  VARCHAR(50) COMMENT '属性ID',
CELL_RULE_NO  VARCHAR(50) COMMENT '单元格处理规则号',
METHOD_ID  VARCHAR(50) COMMENT '调用方法ID',
METHOD_NAME  VARCHAR(50) COMMENT '调用方法名称',
SEARCH_COLUMN_NO  VARCHAR(50) COMMENT '查询条件列号',
SEARCH_ROW_NO  VARCHAR(50) COMMENT '查询条件行号',
OPERATION  VARCHAR(50) COMMENT '查询操作符',
CONDITION_VISIBLE  VARCHAR(50) COMMENT '查询条件可见性',
SHLP_VALUE_TYPE  VARCHAR(50) COMMENT '值类型',
IS_QUICK_SEARCH  VARCHAR(20) COMMENT '快捷查询',
QUICK_CELL_NAME  VARCHAR(50) COMMENT '快捷查询对应栅格',
QUICK_TEXT_FORM_HEIGHT  VARCHAR(50) COMMENT '快捷查询多行文本控制高度',
QUICK_TEXT_LINE_NUM  VARCHAR(50) COMMENT '快捷查询多行文本行数',
QUICK_INLINE_WIDTH  VARCHAR(50) COMMENT '快捷查询控件高度',
QUICK_INLINE_ORDER_NO  VARCHAR(50) COMMENT '快捷查询顺序',
QUICK_INLINE_CONNECTOR  VARCHAR(50) COMMENT '快捷查询连接符',
IS_QUICK_SHOW_LABEL  VARCHAR(50) COMMENT '快捷查询显示标签',
IS_QUICK_RADIO_INLINE  VARCHAR(50) COMMENT '快捷查询内联',
IS_ADV_SEARCH  VARCHAR(50) COMMENT '需高级查询',
ADV_CELL_NAME  VARCHAR(50) COMMENT '高级查询对应栅格',
ADV_TEXT_FORM_HEIGHT  VARCHAR(50) COMMENT '高级查询多行文本控制高度',
ADV_TEXT_LINE_NUM  VARCHAR(50) COMMENT '高级查询多行文本行数',
ADV_INLINE_WIDTH  VARCHAR(50) COMMENT '高级查询控件高度',
ADV_INLINE_ORDER_NO  VARCHAR(50) COMMENT '高级查询顺序',
ADV_INLINE_CONNECTOR  VARCHAR(50) COMMENT '高级查询连接符',
IS_ADV_SHOW_LABEL  VARCHAR(50) COMMENT '高级查询显示标签',
IS_ADV_RADIO_INLINE  VARCHAR(50) COMMENT '高级查询内联',
TAB_INDEX  VARCHAR(50) COMMENT 'Tab顺序',
IS_CELL_EDITABLE  VARCHAR(50) COMMENT '表格可编辑',
INIT_VALUE_TYPE  VARCHAR(50) COMMENT '初始值类型',
INIT_VALUE_TYPE2  VARCHAR(50) COMMENT '初始值类型2',
DEFAULT_VALUE2  VARCHAR(50) COMMENT '初始值2',
FIELD_SORT  VARCHAR(50) COMMENT '字段排序',
ACTIVE_EXPRESS  VARCHAR(1000) COMMENT '可编辑表达式',
LOCK_COLUMN_EXPRESS  VARCHAR(1000) COMMENT '列锁定表达式',
UNLOCK_COLUMN_EXPRESS  VARCHAR(1000) COMMENT '列解锁表达式',
IS_SHOW_SORT  VARCHAR(20) COMMENT '显示排序',
CONSTRAINT T_IPF_CCM_BO_GRID_COLUMN_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '管理页';
CREATE TABLE T_IPF_CCM_BO_GRID_TOOLBAR
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_CCB_BO_ID  VARCHAR(50) COMMENT '业务对象',
METHOD_NAME  VARCHAR(50) COMMENT '调用方法名称',
METHOD_DESC  VARCHAR(50) COMMENT '调用方法描述',
SEQ_NO  VARCHAR(50) COMMENT '顺序号',
METHOD_ID  VARCHAR(50) COMMENT '方法ID',
BUTTON_STYLE  VARCHAR(50) COMMENT '按钮样式',
DISABLED_EXPREE  VARCHAR(50) COMMENT '可编辑表达式',
IS_REFRESH_PARENT_BO  VARCHAR(50) COMMENT '刷新主表',
HOTKEY_TYPE  VARCHAR(50) COMMENT '热键类型',
HOTKEY_VALUE  VARCHAR(50) COMMENT '热键值',
IS_HIDE  VARCHAR(20) COMMENT '隐藏',
CONSTRAINT T_IPF_CCM_BO_GRID_TOOLBAR_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '管理页按钮';
CREATE TABLE T_IPF_CCM_BO_FORM_COLUMN
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_CCM_BO_ID  VARCHAR(50) COMMENT '业务对象',
DEFAULT_VALUE  VARCHAR(50) COMMENT '初始值',
IS_GROUP  VARCHAR(20) COMMENT '分组',
GROUP_NAME  VARCHAR(50) COMMENT '分组名',
IS_CA_NOTE  VARCHAR(20) COMMENT '是否管理标签页',
IS_HEADER  VARCHAR(20) COMMENT '台头',
IS_NOT_NULL  VARCHAR(20) COMMENT '非空',
IS_READ_ONLY  VARCHAR(20) COMMENT '只读',
PROPERTY_NAME  VARCHAR(50) COMMENT '属性名称',
PROPERTY_TYPE  VARCHAR(50) COMMENT '属性类型',
COLUMN_NO  VARCHAR(50) COMMENT '列号',
ROW_NO  VARCHAR(50) COMMENT '行号',
UI_TYPE  VARCHAR(50) COMMENT '组件类型',
IS_VISIBLE  VARCHAR(20) COMMENT '显示',
PROPERTY_ID  VARCHAR(50) COMMENT '属性ID',
RULE_NO  VARCHAR(50) COMMENT '规则号',
COLUMN_STYLE  VARCHAR(50) COMMENT '列样式',
DISPLAY_LABLE  VARCHAR(50) COMMENT '字段文本是否显示',
LABLE_STYLE  VARCHAR(50) COMMENT '标签样式',
CELL_NAME  VARCHAR(50) COMMENT '单元格名称',
TEXT_FORM_HEIGHT  VARCHAR(50) COMMENT '多行文本控制高度',
TEXT_LINE_NUM  VARCHAR(50) COMMENT '多行文本行数',
INLINE_WIDTH  VARCHAR(50) COMMENT '查询控件高度',
INLINE_ORDER_NO  VARCHAR(50) COMMENT '查询顺序',
INLINE_CONNECTOR  VARCHAR(50) COMMENT '查询连接符',
IS_SHOW_LABEL  VARCHAR(50) COMMENT '显示标签',
IS_RADIO_INLINE  VARCHAR(50) COMMENT '控件内联',
TAB_INDEX  VARCHAR(50) COMMENT 'Tab顺序',
INIT_VALUE_TYPE  VARCHAR(50) COMMENT '初始值类型',
CORRECT_TYPE  VARCHAR(50) COMMENT '转换类型',
ACTIVE_EXPRESS  VARCHAR(1000) COMMENT '可编辑表达式',
CONSTRAINT T_IPF_CCM_BO_FORM_COLUMN_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '编辑页';
CREATE TABLE T_IPF_CCM_BO_CONTROL_EVENT
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_CCB_BO_FORM_COLUMN_ID  VARCHAR(50) COMMENT '编辑页',
EVENT_TYPE  VARCHAR(50) COMMENT '事件类型',
EXEC_TYPE  VARCHAR(50) COMMENT '执行类型',
EXEC_CONTENT  VARCHAR(50) COMMENT '执行类型',
CALL_BACK  VARCHAR(2000) COMMENT '回调JS',
CONSTRAINT T_IPF_CCM_BO_CONTROL_EVENT_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '编辑页控件事件';
CREATE TABLE T_IPF_CCM_BO_FORM_TOOLBAR
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_CCB_BO_ID  VARCHAR(50) COMMENT '业务对象',
METHOD_NAME  VARCHAR(50) COMMENT '调用方法名称',
METHOD_DESC  VARCHAR(200) COMMENT '调用方法描述',
SEQ_NO  VARCHAR(50) COMMENT '顺序号',
METHOD_ID  VARCHAR(50) COMMENT '方法ID',
BUTTON_STYLE  VARCHAR(50) COMMENT '按钮样式',
DISABLED_EXPREE  VARCHAR(1000) COMMENT '可编辑表达式',
IS_REFRESH_PARENT_BO  VARCHAR(50) COMMENT '刷新主表',
HOTKEY_TYPE  VARCHAR(50) COMMENT '热键类型',
HOTKEY_VALUE  VARCHAR(50) COMMENT '热键值',
IS_HIDE  VARCHAR(20) COMMENT '隐藏',
CONSTRAINT T_IPF_CCM_BO_FORM_TOOLBAR_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '编辑页按钮';
CREATE TABLE T_IPF_CCM_BO_METHOD
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_CCM_BO_ID  VARCHAR(50) COMMENT '业务对象',
BO_TYPE  VARCHAR(50) COMMENT '对象类型',
BO_REF_ID  VARCHAR(50) COMMENT '业务对象引用ID',
ICON  VARCHAR(1000) COMMENT '图标',
REMARK  VARCHAR(1000) COMMENT '备注',
METHOD_DESC  VARCHAR(1000) COMMENT '方法描述',
METHOD_NAME  VARCHAR(50) COMMENT '方法名称',
METHOD_TYPE  VARCHAR(50) COMMENT '方法类型',
URL  VARCHAR(2000) COMMENT '调用的URL地址',
IS_DEFAULT  VARCHAR(20) COMMENT '默认方法',
IS_VISIBLE  VARCHAR(20) COMMENT '可见',
REF_SHLP_NAME  VARCHAR(50) COMMENT '搜索帮助名称',
RULE_NO  VARCHAR(50) COMMENT '规则号',
JUMP_METHOD_ID  VARCHAR(50) COMMENT '跳转方法ID',
JUMP_METHOD_NAME  VARCHAR(50) COMMENT '跳转方法名称',
JUMP_BO_NAME  VARCHAR(50) COMMENT '跳转业务对象名',
WIDTH  VARCHAR(50) COMMENT '宽',
HEIGHT  VARCHAR(50) COMMENT '高',
GROUP_NAME  VARCHAR(50) COMMENT '校验分组名称',
GROUP_DESC  VARCHAR(50) COMMENT '校验分组描述',
IS_CACHE  VARCHAR(20) COMMENT '是否缓存',
CACHE_TYPE  VARCHAR(50) COMMENT '缓存类型',
REQUEST_TYPE  VARCHAR(50) COMMENT '请求类型',
JUMP_WINDOW_TITLE  VARCHAR(50) COMMENT '弹窗标题',
IS_REFRESH_PARENT_BO  VARCHAR(20) COMMENT '是否刷新主表',
CONSTRAINT T_IPF_CCM_BO_METHOD_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '后台方法定义表';
CREATE TABLE T_IPF_CCM_BO_METHOD_PARAM
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_CCM_BO_METHOD_ID  VARCHAR(50) COMMENT '方法',
CONSTANT_VALUE  VARCHAR(50) COMMENT '常量值',
IS_CONDITION  VARCHAR(20) COMMENT '查询条件',
METHOD_NAME  VARCHAR(50) COMMENT '方法名',
PARAM_NAME  VARCHAR(50) COMMENT '参数名',
PARAM_REF  VARCHAR(50) COMMENT '属性名',
PARAM_TYPE  VARCHAR(50) COMMENT '参数值来源类型',
BO_NAME_REF  VARCHAR(50) COMMENT '业务对象名',
CONSTRAINT T_IPF_CCM_BO_METHOD_PARAM_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '方法参数定义表';
CREATE TABLE T_IPF_CCM_BO_METHOD_RULE
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_CCB_BO_METHOD_ID  VARCHAR(50) COMMENT '方法',
RULE_NO  VARCHAR(50) COMMENT '规则号',
RULE_NAME  VARCHAR(50) COMMENT '规则名称',
INVOKE_POINT  VARCHAR(50) COMMENT '调用时机',
INVOKE_ORDER  VARCHAR(50) COMMENT '调用顺序',
RULE_ID  VARCHAR(50) COMMENT '规则ID',
CONSTRAINT T_IPF_CCM_BO_METHOD_RULE_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '方法规则调用';
CREATE TABLE T_IPF_CCM_BO_CHECK
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
CHECK_TYPE  VARCHAR(50) COMMENT '校验类型',
CHECK_NAME  VARCHAR(50) COMMENT '校验名称',
BO_NAME  VARCHAR(50) COMMENT '业务对象名',
PROPERTY_NAME  VARCHAR(50) COMMENT '属性名称',
PROPERTY_DESC  VARCHAR(200) COMMENT '属性描述',
CONSTRAINT T_IPF_CCM_BO_CHECK_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '数据校验';
CREATE TABLE T_IPF_CCM_BO_CHECK_FIELD
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_CCM_BO_CHECK_ID  VARCHAR(50) COMMENT '校验',
PROPERTY_ID  VARCHAR(50) COMMENT '属性ID',
PROPERTY_NAME  VARCHAR(50) COMMENT '属性名称',
PROPERTY_DESC  VARCHAR(200) COMMENT '属性描述',
BO_NAME  VARCHAR(50) COMMENT '业务对象名',
SEQ_NO  VARCHAR(50) COMMENT '顺序号',
CONSTRAINT T_IPF_CCM_BO_CHECK_FIELD_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '数据字段';
CREATE TABLE T_IPF_CCM_BO_CHECK_REL_GROUP
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_CCM_BO_CHECK_ID  VARCHAR(50) COMMENT '校验',
GROUP_NAME  VARCHAR(50) COMMENT '分组名称',
GROUP_DESC  VARCHAR(200) COMMENT '分组描述',
CONSTRAINT T_IPF_CCM_BO_CHECK_REL_GROUP_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '校验分组';
CREATE TABLE T_IPF_CCM_UI_LAYOUT_CONFIG
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_CCM_BO_ID  VARCHAR(50) COMMENT '业务对象',
BO_ID  VARCHAR(50) COMMENT '业务对象ID',
PAGE_NAME  VARCHAR(50) COMMENT '页面名称',
LAYOUT_ELEMENT_NAME  VARCHAR(50) COMMENT '布局元素名称',
LAYOUT_ELEMENT_DESCRIPTION  VARCHAR(200) COMMENT '布局元素描述',
BO_NAME  VARCHAR(50) COMMENT '业务对象名称',
BO_ELEMENT_NAME  VARCHAR(50) COMMENT '业务对象布局元素名称',
CONSTRAINT T_IPF_CCM_UI_LAYOUT_CONFIG_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '业务对象界面布局';
CREATE TABLE T_IPF_CCM_BO_FORM_CELL
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_CCM_BO_ID  VARCHAR(50) COMMENT '业务对象',
FORM_TYPE  VARCHAR(50) COMMENT '界面类型',
IS_DEFAULT  VARCHAR(20) COMMENT '默认FORM',
CELL_NAME  VARCHAR(50) COMMENT '栅格名称',
CELL_TYPE  VARCHAR(50) COMMENT '栅格类型',
CELL_HEIGH  VARCHAR(50) COMMENT '栅格高度',
IS_SHOW_GROUP  VARCHAR(20) COMMENT '显示分组',
GROUP_WIDGET  VARCHAR(50) COMMENT '分组控件',
ELEMENT_CODE  VARCHAR(50) COMMENT '数据元素代码',
GROUP_TITLE  VARCHAR(50) COMMENT '分组标题',
UNIT_COUNT  VARCHAR(50) COMMENT '包含栅格数',
IS_PARENT  VARCHAR(20) COMMENT '包含子栅格',
CHILDREN_LINE_COUNT  VARCHAR(50) COMMENT '子栅格行数',
PARENT_CELL_NAME  VARCHAR(50) COMMENT '父栅格',
ROW_NO  VARCHAR(50) COMMENT '所属栅格行',
COLUMN_NO  VARCHAR(50) COMMENT '所属栅格列',
LABEL_UNIT_COUNT  VARCHAR(50) COMMENT '标签占栅格数',
CONSTRAINT T_IPF_CCM_BO_FORM_CELL_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '表单珊格';
CREATE TABLE T_IPF_CCM_BO_RELATION
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_CCM_BO_ID  VARCHAR(50) COMMENT '业务对象',
PROPERTY_NAME  VARCHAR(50) COMMENT '属性名称',
SUB_BO_NAME  VARCHAR(50) COMMENT '子对象名称',
SUB_BO_REL_TYPE  VARCHAR(50) COMMENT '子对象关系类型',
OBJECT_TYPE  VARCHAR(50) COMMENT '对象类型',
DESCRIPTION  VARCHAR(1000) COMMENT '描述',
SUB_BO_ORDER_NO  VARCHAR(50) COMMENT '子业务对象的排序号',
PERSISTENT_SAVE_TYPE  VARCHAR(50) COMMENT '子业务对象保存方式',
GRID_EDIT_TYPE  VARCHAR(50) COMMENT '表格维护方式',
LINK_BO_NAME  VARCHAR(50) COMMENT '关联对象名称',
CONSTRAINT T_IPF_CCM_BO_RELATION_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '业务对象关系';
CREATE TABLE T_IPF_CCM_BO_PAGE
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_CCM_BO_ID  VARCHAR(50) COMMENT '业务对象',
PAGE_TYPE  VARCHAR(50) COMMENT '页面类型',
DESCRIPTION  VARCHAR(1000) COMMENT '描述',
PAGE_NAME  VARCHAR(50) COMMENT '页面名称',
CONSTRAINT T_IPF_CCM_BO_PAGE_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '页面列表';
CREATE TABLE T_IPF_CCM_BO_PAGE_LAYOUT
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_CCM_BO_PAGE_ID  VARCHAR(50) COMMENT '页面',
LAYOUT_TYPE  VARCHAR(50) COMMENT '页面布局类型',
LAYOUT_CONTAINER_TYPE  VARCHAR(50) COMMENT '页面布局容器类型',
LAYOUT_BO_NAME  VARCHAR(50) COMMENT '页面布局业务对象名称',
STYLE_CLASS  VARCHAR(50) COMMENT '样式名称',
STYLE  VARCHAR(50) COMMENT '样式',
FORM_TYPE  VARCHAR(50) COMMENT '表单类型',
ELEMENT_NAME  VARCHAR(50) COMMENT '布局元素名称',
HEIGHT  VARCHAR(50) COMMENT '栅格高度',
IS_SHOW_GROUP  VARCHAR(50) COMMENT '显示分组',
GROUP_WIDGET  VARCHAR(50) COMMENT '分组控件',
GROUP_MSG_CODE  VARCHAR(50) COMMENT '分组标题系统消息代码',
GROUP_TITLE  VARCHAR(50) COMMENT '分组标题',
UNIT_COUNT  VARCHAR(50) COMMENT '包含栅格数',
IS_PARENT  VARCHAR(50) COMMENT '是否父栅格',
CHILDREN_LINE_COUNT  VARCHAR(50) COMMENT '子栅格行数',
CELL_NAME  VARCHAR(50) COMMENT '栅格名称',
ROW_NO  VARCHAR(50) COMMENT '行号',
COLUMN_NO  VARCHAR(50) COMMENT '列号',
LABEL_UNIT_COUNT  VARCHAR(50) COMMENT '标签占栅格数',
SEQ_NO  VARCHAR(50) COMMENT '序号',
CONTROL_CONNECTOR  VARCHAR(50) COMMENT '连接符号',
PARENT_CELL_NAME  VARCHAR(50) COMMENT '父栅格',
CONSTRAINT T_IPF_CCM_BO_PAGE_LAYOUT_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '页面布局';
CREATE TABLE T_IPF_CCM_BO_PG_LO_ELEMENT
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_CCM_BO_PAGE_LAYOUT_ID  VARCHAR(50) COMMENT '页面布局',
SEQ_NO  VARCHAR(50) COMMENT '序号',
LAYOUT_ELEMENT_TYPE  VARCHAR(50) COMMENT '页面布局元素类型',
LAYOUT_BO_NAME  VARCHAR(50) COMMENT '页面布局业务对象名称',
CONTROL_HEIGHT  VARCHAR(50) COMMENT '控件高度',
CONTROL_WIDTH  VARCHAR(50) COMMENT '控件宽度',
TEXT_LINE_NUM  VARCHAR(50) COMMENT '多行文本行数',
CONTROL_CONNECTOR  VARCHAR(50) COMMENT '连接符',
IS_NOT_NULL  VARCHAR(20) COMMENT '非空',
IS_READ_ONLY  VARCHAR(20) COMMENT '只读',
UI_TYPE  VARCHAR(50) COMMENT '控件类型',
IS_VISIBLE  VARCHAR(20) COMMENT '可见',
COLUMN_STYLE  VARCHAR(50) COMMENT '列样式',
LABLE_STYLE  VARCHAR(50) COMMENT '标签样式',
IS_SHOW_LABLE  VARCHAR(20) COMMENT '显示标签',
IS_INLINE  VARCHAR(20) COMMENT '控件内联',
TAB_INDEX  VARCHAR(50) COMMENT 'Tab顺序',
DEFAULT_VALUE  VARCHAR(50) COMMENT '默认值',
INIT_VALUE_TYPE  VARCHAR(50) COMMENT '初始值类型',
CORRECT_TYPE  VARCHAR(50) COMMENT '转换类型',
CONDITION_TYPE  VARCHAR(50) COMMENT '查询条件类型',
OPERATION  VARCHAR(50) COMMENT '操作符',
QUERY_TYPE  VARCHAR(50) COMMENT '查询类型',
RANGE_TYPE  VARCHAR(50) COMMENT '区间类型',
METHOD_NAME  VARCHAR(50) COMMENT '方法名称',
PROPERTY_NAME  VARCHAR(50) COMMENT '属性名',
CONSTRAINT T_IPF_CCM_BO_PG_LO_ELEMENT_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '布局元素定义';
CREATE TABLE T_IPF_CCM_DICT
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
DICT_CODE  VARCHAR(50) COMMENT '字典代码',
DICT_NAME  VARCHAR(50) COMMENT '字典名称',
DICT_TYPE  VARCHAR(50) COMMENT '字典类型',
CODE_COLUMN  VARCHAR(50) COMMENT '字典代码字段',
NAME_COLUMN  VARCHAR(50) COMMENT '字典名称字段',
KEY_COLUMN  VARCHAR(50) COMMENT '字典ID字段',
TABLE_NAME  VARCHAR(50) COMMENT '字典表名',
IS_GROUP  VARCHAR(20) COMMENT '是否分组',
GROUP_COLUMN  VARCHAR(50) COMMENT '分组字段',
REMARK  VARCHAR(1000) COMMENT '备注',
ORDER_COLUMN  VARCHAR(50) COMMENT '排序字段',
IS_SYSTEM  VARCHAR(20) COMMENT '是否系统',
DATA_TYPE  VARCHAR(50) COMMENT '数据类型',
FIELD_LENGTH  VARCHAR(50) COMMENT '字段长度',
DECIMALS  VARCHAR(50) COMMENT '小数位',
CONSTRAINT T_IPF_CCM_DICT_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '字典类型';
CREATE TABLE T_IPF_CCM_DICT_VALUE
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_CCM_DICT_ID  VARCHAR(50) COMMENT '业务对象',
CODE_VALUE  VARCHAR(50) COMMENT '代码值',
DISPLAY_VALUE  VARCHAR(50) COMMENT '显示值',
SEQ_NO  VARCHAR(50) COMMENT '顺序号',
GROUP_VALUE  VARCHAR(50) COMMENT '分组值',
REMARK  VARCHAR(1000) COMMENT '备注',
CONSTRAINT T_IPF_CCM_DICT_VALUE_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '字典数据';
CREATE TABLE T_IPF_CCM_SHLP
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
SHLP_NAME  VARCHAR(50) COMMENT '名称',
SHLP_STATUS  VARCHAR(50) COMMENT '状态',
DATA_SOURCE  VARCHAR(1000) COMMENT '数据源',
DATA_SOURCE_TYPE  VARCHAR(50) COMMENT '数据源类型',
VALUE_COLUMN  VARCHAR(50) COMMENT '值字段',
DISPLAY_COLUMN  VARCHAR(50) COMMENT '文本字段',
RULE_NO  VARCHAR(50) COMMENT '业务规则号',
CONSTRAINT T_IPF_CCM_SHLP_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '搜索帮助';
CREATE TABLE T_IPF_CCM_SHLP_DETAIL
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_CCM_SHLP_ID  VARCHAR(50) COMMENT '搜索帮助',
SHLP_NAME  VARCHAR(50) COMMENT '搜索帮助名称',
FIELD_NAME  VARCHAR(50) COMMENT '字段名',
FIELD_TEXT  VARCHAR(1000) COMMENT '显示文本',
LIST_POSITION  VARCHAR(50) COMMENT '字段清单中的位置',
IS_VISIBLE  VARCHAR(20) COMMENT '是否清单中显示',
IS_INPUT  VARCHAR(20) COMMENT '输入参数',
IS_OUTPUT  VARCHAR(20) COMMENT '输出参数',
DETAIL_STATUS  VARCHAR(50) COMMENT '状态',
DATA_TYPE  VARCHAR(50) COMMENT '数据类型',
DECIMALS  VARCHAR(50) COMMENT '小数位',
DEFAULT_VALUE  VARCHAR(50) COMMENT '默认值',
COLUMN_LENGTH  VARCHAR(50) COMMENT '长度',
CONDITION_POSITION  VARCHAR(50) COMMENT '条件字段位置',
OPERATION  VARCHAR(50) COMMENT '操作符',
IS_ROLL_CHANGE  VARCHAR(20) COMMENT '条件选择类型',
IS_EDITABLE  VARCHAR(20) COMMENT '弹出窗表格中可编辑',
DDTEXT  VARCHAR(1000) COMMENT '字段中文描述',
IS_SORT  VARCHAR(20) COMMENT '排序',
SORT_ORDER  VARCHAR(50) COMMENT '排序顺序',
SORT_TYPE  VARCHAR(50) COMMENT '排序类型',
CONSTRAINT T_IPF_CCM_SHLP_DETAIL_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '搜索帮助明细';
CREATE TABLE T_IPF_CCM_SHLP_TEXT
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_CCM_SHLP_ID  VARCHAR(50) COMMENT '搜索帮助',
DD_LANGUAGE  VARCHAR(50) COMMENT '语言',
DD_TEXT  VARCHAR(1000) COMMENT '文本描述',
CONSTRAINT T_IPF_CCM_SHLP_TEXT_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '搜索帮助多语言';
CREATE TABLE T_IPF_RTM_TYPE
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
TYPE_CODE  VARCHAR(50) COMMENT '类别代码',
TYPE_NAME  VARCHAR(50) COMMENT '类别名称',
CONSTRAINT T_IPF_RTM_TYPE_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '运行期配置类型';
CREATE TABLE T_IPF_RTM_TYPE_BO
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_RTM_TYPE_ID  VARCHAR(50) COMMENT '运行期配置类型',
IPF_CCM_BO_ID  VARCHAR(50) COMMENT '业务对象ID',
BO_NAME  VARCHAR(50) COMMENT '业务对象名称',
BO_DESC  VARCHAR(1000) COMMENT '业务对象描述',
PROPERTY_NAME  VARCHAR(50) COMMENT '业务对象属性名称',
PROPERTY_UTILITY  VARCHAR(50) COMMENT '属性用途',
EXTERNAL_BO_NAME  VARCHAR(50) COMMENT '外部业务对象名称',
EXTERNAL_MATCH_PROPERTY  VARCHAR(50) COMMENT '查询匹配属性',
EXTERNAL_RESULT_PROPERTY  VARCHAR(50) COMMENT '结果属性',
EXTERNAL_BO_ID  VARCHAR(50) COMMENT '外部业务对象ID',
TRIGGER_PROPERTY_NAME  VARCHAR(50) COMMENT '触发属性名',
CONSTRAINT T_IPF_RTM_TYPE_BO_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '运行期配置界面';
CREATE TABLE T_IPF_RTM_TYPE_BO_ATTR
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_RTM_TYPE_BO_ID  VARCHAR(50) COMMENT '运行期配置界面',
PROPERTY_NAME  VARCHAR(50) COMMENT '属性名称',
FIELD_TEXT  VARCHAR(200) COMMENT '属性中文描述',
CONSTRAINT T_IPF_RTM_TYPE_BO_ATTR_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '运行期配置字段';
CREATE TABLE T_IPF_RTM_TYPE_BO_MAP
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_RTM_TYPE_BO_ID  VARCHAR(50) COMMENT '运行期配置界面',
SOURCE_VALUE  VARCHAR(50) COMMENT '源值',
DEST_VALUE  VARCHAR(50) COMMENT '目标值',
CONSTRAINT T_IPF_RTM_TYPE_BO_MAP_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '类型与BO对照表';
CREATE TABLE T_IPF_RTM_CONFIG
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
CONFIG_CODE  VARCHAR(50) COMMENT '配置代码',
CONFIG_NAME  VARCHAR(50) COMMENT '配置名称',
TYPE_CODE  VARCHAR(50) COMMENT '类别代码',
CONSTRAINT T_IPF_RTM_CONFIG_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '运行期配置';
CREATE TABLE T_IPF_RTM_CONFIG_ATTR
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_RTM_CONFIG_ID  VARCHAR(50) COMMENT '运行期配置',
SEQ_NO  VARCHAR(50) COMMENT '序号',
DISPLAY_LABEL  VARCHAR(50) COMMENT '显示名称',
DATA_TYPE  VARCHAR(50) COMMENT '数据类型',
UI_TYPE  VARCHAR(50) COMMENT 'UI组件类型',
DICT_TABLE_NAME  VARCHAR(50) COMMENT '字典表编码',
DICT_GROUP_VALUE  VARCHAR(50) COMMENT '字典表分组名',
SEARCH_HELP  VARCHAR(50) COMMENT '搜索帮助名',
SH_VALUE_COLUMN  VARCHAR(50) COMMENT '搜索帮助值字段',
SH_DISPLAY_COLUMN  VARCHAR(50) COMMENT '搜索帮助文本字段',
CONSTRAINT T_IPF_RTM_CONFIG_ATTR_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '运行期配置明细';
CREATE TABLE T_IPF_RTM_CONFIG_ATTR_BO
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_RTM_CONFIG_ATTR_ID  VARCHAR(50) COMMENT '运行期配置明细',
IPF_RTM_CONFIG_ID  VARCHAR(50) COMMENT '运行期配置明细',
IPF_CCM_BO_ID  VARCHAR(50) COMMENT '业务对象ID',
BO_NAME  VARCHAR(50) COMMENT '业务对象名称',
BO_DESC  VARCHAR(1000) COMMENT '业务对象描述',
BO_ATTRIBUTE_NAME  VARCHAR(50) COMMENT '属性名称',
IS_VISIBLE  VARCHAR(20) COMMENT '可见',
IS_REQUIRED  VARCHAR(20) COMMENT '必输',
DEFAULT_VALUE  VARCHAR(50) COMMENT '默认值',
SHLP_VALUE_FILED  VARCHAR(50) COMMENT '搜索帮助值字段',
CONSTRAINT T_IPF_RTM_CONFIG_ATTR_BO_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '运行期配置明细BO扩展';
CREATE TABLE T_IPF_SCHEDULE_JOB
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
JOB_NAME  VARCHAR(50) COMMENT '任务名称',
JOB_GROUP  VARCHAR(50) COMMENT '任务分组',
JOB_STATUS  VARCHAR(50) COMMENT '任务状态',
CRON_EXPRESSION  VARCHAR(1000) COMMENT '执行频率',
JOB_DESC  VARCHAR(1000) COMMENT '任务描述',
RULE_NO  VARCHAR(50) COMMENT '规则号',
JOB_SERVICE  VARCHAR(50) COMMENT '任务对象',
JOB_METHOD  VARCHAR(50) COMMENT '任务方法',
CONSTRAINT T_IPF_SCHEDULE_JOB_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '定时任务';
CREATE TABLE T_IPF_CCM_NUMRULE
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
RULE_CODE  VARCHAR(50) COMMENT '单号规则代码',
RULE_NAME  VARCHAR(50) COMMENT '单号规则名称',
RULE_EXPRESSION  VARCHAR(2000) COMMENT '单号生成规则',
RULE_STATUS  VARCHAR(50) COMMENT '单号规则状态',
INITIAL_VALUE  VARCHAR(50) COMMENT '初始值',
MAX_VALUE  VARCHAR(50) COMMENT '最大值',
GROWTH  VARCHAR(50) COMMENT '增长值',
REMARK  VARCHAR(1000) COMMENT '备注',
IS_ACTIVE  VARCHAR(20) COMMENT '有效',
IPF_CCM_BO_ID  VARCHAR(50) COMMENT '业务对象ID',
BO_NAME  VARCHAR(50) COMMENT '业务对象名称',
IPF_CCM_BO_PROPERTY_ID  VARCHAR(50) COMMENT '属性ID',
PROPERTY_NAME  VARCHAR(50) COMMENT '属性名称',
CONSTRAINT T_IPF_CCM_NUMRULE_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '单号生成规则';
CREATE TABLE T_IPF_CCM_NUMRULE_LIST
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_CCM_NUMRULE_ID  VARCHAR(50) COMMENT '单号生成规则',
CONST_EXPRESSION  VARCHAR(2000) COMMENT '规则内容',
CURRENT_VALUE  VARCHAR(50) COMMENT '当前值',
INITIAL_VALUE  VARCHAR(50) COMMENT '初始值',
MAX_VALUE  VARCHAR(50) COMMENT '最大值',
GROWTH  VARCHAR(50) COMMENT '增长值',
REMARK  VARCHAR(1000) COMMENT '备注',
IS_ACTIVE  VARCHAR(20) COMMENT '有效',
CONSTRAINT T_IPF_CCM_NUMRULE_LIST_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '单号生成规则历史';
CREATE TABLE T_IPF_CCM_BIZRULE
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
RULE_TYPE  VARCHAR(50) COMMENT '规则类型',
RULE_CLASS  VARCHAR(50) COMMENT '规则类名',
RULE_CODE  VARCHAR(50) COMMENT '规则编码',
RULE_NAME  VARCHAR(50) COMMENT '规则名称',
RULE_DES  VARCHAR(200) COMMENT '规则描述',
IS_SYSTEM_CREATE  VARCHAR(20) COMMENT '系统创建',
CONSTRAINT T_IPF_CCM_BIZRULE_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '业务规则';
CREATE TABLE T_IPF_CCM_BIZRULE_DTL
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_CCM_BIZRULE_ID  VARCHAR(50) COMMENT '规则',
IPF_CCM_STRATEGY_ID  VARCHAR(50) COMMENT '策略ID',
STRATEGY_CODE  VARCHAR(50) COMMENT '策略代码',
STRATEGY_NAME  VARCHAR(50) COMMENT '策略名称',
REMARK  VARCHAR(1000) COMMENT '备注',
RULE_DETAIL_INDEX  VARCHAR(50) COMMENT '序号',
CONSTRAINT T_IPF_CCM_BIZRULE_DTL_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '规则明细';
CREATE TABLE T_IPF_CCM_BIZRULE_DTL_PARAM
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_CCM_BIZRULE_ID  VARCHAR(50) COMMENT '规则',
IPF_CCM_STRATEGY_ID  VARCHAR(50) COMMENT '策略ID',
IPF_CCM_STRATEGY_PARAM_ID  VARCHAR(50) COMMENT '策略参数ID',
PARAM_NAME  VARCHAR(50) COMMENT '参数名',
PARAM_DES  VARCHAR(1000) COMMENT '参数描述',
PARAM_VALUE  VARCHAR(50) COMMENT '参数值',
PARAM_VALUE_DES  VARCHAR(1000) COMMENT '参数值说明',
CONSTRAINT T_IPF_CCM_BIZRULE_DTL_PARAM_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '规则明细参数';
CREATE TABLE T_IPF_CCM_STRATEGY
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
STRATEGY_TYPE  VARCHAR(50) COMMENT '策略类别',
STRATEGY_CODE  VARCHAR(50) COMMENT '策略编码',
STRATEGY_NAME  VARCHAR(50) COMMENT '策略名称',
STRATEGY_DES  VARCHAR(1000) COMMENT '策略描述',
DRL_FILE  VARCHAR(1000) COMMENT 'DRL文件',
DRL_ROUTE  VARCHAR(1000) COMMENT 'DRL路径',
PACKAGE_NAME  VARCHAR(50) COMMENT '包名',
RULE_NO  VARCHAR(50) COMMENT '规则号',
RULE_TYPE  VARCHAR(50) COMMENT '规则类型',
SOURCE_CODE  VARCHAR(50) COMMENT '源代码',
SVN_REVISION  VARCHAR(50) COMMENT 'SVN版本',
CONSTRAINT T_IPF_CCM_STRATEGY_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '策略定义';
CREATE TABLE T_IPF_CCM_STRATEGY_PARAM
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_CCM_STRATEGY_ID  VARCHAR(50) COMMENT '策略',
PARAM_TYPE  VARCHAR(50) COMMENT '参数类型',
PARAM_NAME  VARCHAR(50) COMMENT '参数名',
PARAM_DES  VARCHAR(1000) COMMENT '参数描述',
RTM_CONFIG_CODE  VARCHAR(50) COMMENT '运行期配置',
CONSTRAINT T_IPF_CCM_STRATEGY_PARAM_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '策略参数定义';
CREATE TABLE T_IPF_RULE_FILTER
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
FILTER_CODE  VARCHAR(50) COMMENT '筛选编号',
FILTER_NAME  VARCHAR(50) COMMENT '筛选名称',
FILTER_DESC  VARCHAR(1000) COMMENT '描述',
FILTER_EXPRESS  VARCHAR(2000) COMMENT '筛选条件表达式',
IS_ACTIVE  VARCHAR(20) COMMENT '有效',
IS_SYSTEM_CREATE  VARCHAR(20) COMMENT '系统创建',
IPF_CCM_BO_ID  VARCHAR(50) COMMENT '业务对象ID',
BO_NAME  VARCHAR(50) COMMENT '业务对象名称',
CONSTRAINT T_IPF_RULE_FILTER_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '筛选条件配置';
CREATE TABLE T_IPF_RULE_FILTER_DETAIL
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_RULE_FILTER_ID  VARCHAR(50) COMMENT '筛选条件',
LINE_ID  VARCHAR(50) COMMENT '行号',
ATTRIBUTE  VARCHAR(50) COMMENT '表属性',
OPERAND  VARCHAR(50) COMMENT '运算符',
LITERAL_VALUE  VARCHAR(50) COMMENT '值',
AND_OR  VARCHAR(50) COMMENT 'AND或者OR',
LEFT_PAREN  VARCHAR(50) COMMENT '左括号数量',
RIGHT_PAREN  VARCHAR(50) COMMENT '右括号数量',
CONSTRAINT T_IPF_RULE_FILTER_DETAIL_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '筛选条件配置明细';
CREATE TABLE T_IPF_RULE_ROTATE
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
WAREHOUSE_OFFICE_ID  VARCHAR(50) COMMENT '周转单位',
RULE_CODE  VARCHAR(50) COMMENT '周转规则代码',
RULE_DESC  VARCHAR(200) COMMENT '描述',
IS_ACTIVE  VARCHAR(20) COMMENT '启用',
IS_SYSTEM_CREATE  VARCHAR(20) COMMENT '系统创建',
ROTATE_EXPRESS  VARCHAR(2000) COMMENT '周转规则表达式',
CONSTRAINT T_IPF_RULE_ROTATE_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '周转规则';
CREATE TABLE T_IPF_RULE_ROTATE_DETAIL
(                                
ID  VARCHAR(50) NOT NULL COMMENT '主键',
IPF_RULE_ROTATE_ID  VARCHAR(50) COMMENT '周转规则',
LINE_ID  VARCHAR(50) COMMENT '行号',
LOT_ATTRIBUTES  VARCHAR(50) COMMENT '批次属性',
SORT_TYPE  VARCHAR(50) COMMENT '排序',
DETAIL_DESC  VARCHAR(2000) COMMENT '描述',
IS_ACTIVE  VARCHAR(20) COMMENT '启用',
CONSTRAINT T_IPF_RULE_ROTATE_DETAIL_PK PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT '周转规则明细';
