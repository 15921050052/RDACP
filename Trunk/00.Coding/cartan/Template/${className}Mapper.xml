<#assign className = table.className>
<#assign classNameLower = className?uncap_first>
<#assign bigger = "&gt;">
<#assign smaller = "&lt;">
<#assign leftbit = "#{">
<#assign rightbit = "}">
<#assign leftsit = "#{">
<#assign rightsit = "}">
<#assign leftbracket = "#{">
<#assign rightbracket = "}">
<#assign prikey = "ID">
<#assign pricolumn = "id">
<#assign priSqlType = "Long">
<#assign prijavaType = "Long">
<#assign firstprikey = "ID">
<#assign firstpricolumn = "id">
<#assign firstpriSqlType = "Long">
<#assign firstprijavaType = "Long">
<#assign isHasKey = 0>
<#assign keycount = 0>
<#list table.columns as column>
<#assign keycount = keycount+1>
<#if keycount==1>
<#assign firstpricolumn = column.columnName?uncap_first>
<#assign firstprikey = column.sqlName>
<#assign firstpriSqlType = column.sqlTypeName>
<#assign firstprijavaType = column.sqlTypeName>
		</#if>
<#if column.pk>
<#assign pricolumn = column.columnName?uncap_first>
<#assign prikey = column.sqlName>
<#assign priSqlType = column.sqlTypeName>
<#assign prijavaType = column.javaType>
<#assign isHasKey = 1>
		</#if>
		</#list>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="${basepackage}.common.mapper.${moduleName}.${className}Mapper">

	<resultMap id="${classNameLower}ResultMap" type="${basepackage}.common.pojo.${moduleName}.${className}">
		<@generateResultMap/>
	</resultMap>

	<sql id="Base_Column_List">
		<#list table.columns as column>
		<#if table.columns?size!=(column_index+1)>${column.sqlName},</#if><#if table.columns?size==(column_index+1)>${column.sqlName}</#if>
		</#list>
	</sql>

<sql id="ui_query_conditon">
<where>
	1 = 1
	<if test="conditions!=null and conditions.size() >0">
		<foreach collection="conditions" item="condition" index="index">
		<#list table.columns as column>
		<if test="condition.fieldname!=null and condition.fieldname=='${column.sqlName}' and conditon.fieldvalue !=null">
			<if test="condition.union!=null and condition.union=='and' ">
				AND
			</if>
			<if test="condition.union!=null and condition.union=='or' ">
				OR
			</if>
			<if test="condition.bracket!=null">
				<foreach collection="condition.bracket" item="item" index="index">
					<if test="item!=null and item=='left' ">
						${leftbracket}
					</if>
				</foreach>
			</if>
			<if test="condition.relation!=null and condition.relation=='in' ">
				${column.sqlName} in <foreach collection="condition.fieldvalue" item="item" index="index" open="(" close=")" separator=",">${leftbit}item${rightbit}</foreach>
			</if>
			<#if column.javaType=="String">
			<if test="condition.relation != null and condition.relation=='like'">
				${column.sqlName} like <foreach collection="condition fieldvalue" item="item" index="index"><if test="index==0">${leftbit}item${rightbit}</if></foreach>
			</if>
		</#if>
		<if test="condition.relation!=null and condition.relation=='eq'">
			${column.sqlName} =<foreach collection="condition.fieldvalue" item="item" index="index"><if test="index==0">${leftbit}item${rightbit}</if></foreach>
		</if>
		<if test="condition.relation!=null and condition.relation=='nq'">
			${column.sqlName} ${smaller}${bigger}<foreach collection="condition.fieldvalue" item="item" index="index"><if test="index==0">${leftbit}item${rightbit}</if></foreach>
		</if>
		<if test="condition.relation!=null and condition.relation=='bg'">
			${column.sqlName} ${bigger}<foreach collection="condition.fieldvalue" item="item" index="index"><if test="index==0">${leftbit}item${rightbit}</if></foreach>
		</if>
		<if test="condition.relation!=null and condition.relation=='sm'">
			${column.sqlName} ${smaller}<foreach collection="condition.fieldvalue" item="item" index="index"><if test="index==0">${leftbit}item${rightbit}</if></foreach>
		</if>
		<if test="condition.relation!=null and condition.relation=='be'">
			${column.sqlName} ${bigger}=<foreach collection="condition.fieldvalue" item="item" index="index"><if test="index==0">${leftbit}item${rightbit}</if></foreach>
		</if>
		<if test="condition.relation!=null and condition.relation=='se'">
			${column.sqlName} ${smaller}=<foreach collection="condition.fieldvalue" item="item" index="index"><if test="index==0">${leftbit}item${rightbit}</if></foreach>
		</if>
		<if test="condition.bracket!=null">
			<foreach collection="condition.bracket" item="item" index="index">
				<if test="item!=null and item=='right' ">
					${rightbracket}
				</if>
			</foreach>
		</if>

	</if>
</#list>
</foreach>
		</if>
		</where>
		</sql>
<select id="findSumByCond" resultMap="${classNameLower}ResultMap" parameterType="map">
select
<include refid="ui_sum_condition"/>
FROM ${table.sqlName}
<include refid="ui_query_condition"/>
GROUP BY
<include refid="ui_groupby_conditon"/>
</select>

<sql id="ui_sum_conditon">
<if test="groupfields!=null and groupfields.size()>0">
	<foreach collection="groupfields" item="conditon" index="index">
		<if test="index==0">
		<#list table.columns as column>
		<if test="condition.relation!=null and condition.relation=='sum'">
		<if test="conditon.fieldname !=null and conditon.fieldname=='${column.sqlName}'">
		<foreach collection="conditon.fieldvalue" item="item" index="itemindex">
			<#list table.columns as itemcolumn>
			<if test="item!=null and item=='${itemcolumn.sqlName}'">
				${itemcolumn.sqlName},
			</if>
		</#list>
	</foreach>
	sum(${column.sqlName}) as ${column.sqlName}
</if>
</if>
		</#list>
		</if>
		</foreach>
		</if>
		</sql>

<sql id="ui_groupby_condition">
<if test="groupfields!=null and groupfields.size()>0">
	<foreach collection="groupfields" item="condition" index="index">
		<if test="index==0">
		<#list table.columns as column>
		<if test="condition.relation!=null and condition.relation =='sum'">
			<if test="condition.fieldname!=null and condition.fieldname=='${column.sqlName}' ">
				<foreach collection="condition.fieldvalue' item="item" index="itemindex">
									<#list table.columns as itemcolumn>
										<if test="item!=null and item=='${itemcolumn.sqlName}'">
				<if test="itemindex==0">
					${itemcolumn.sqlName}
				</if>
				<if test="itemindex!=0">
					,${itemcolumn.sqlName}
				</if>
			</if>
		</#list>
	</foreach>
</if>
</if>
		</#list>
		</if>
		</foreach>
		</if>
		</sql>

<sql id="ui_orderby_condition">
<if test="conditions!=null and conditions.size()>0">
	<foreach collection="conditions" item="condition" index="index">
		<if test="condition.relation!=null and condition.relation =='orderby'">
			<foreach collection="condition.fieldvalue' item="item" index="itemindex">
								<#list table.columns as itemcolumn>
									<if test="item!=null and item=='${itemcolumn.sqlName}'">
			<if test="itemindex==0">
				ORDER BY ${itemcolumn.sqlName}
			</if>
			<if test="itemindex!=0">
				,${itemcolumn.sqlName}
			</if>
		</if>
	</#list>
</foreach>
<if test="conditon.fieldname==null">
	desc
</if>
<if test="condition.fieldname!=null and condition.fieldname=='desc'">
	desc
</if>
<if test="condition.fieldname!=null and condition.fieldname=='asc'">
	asc
</if>
</if>
		</foreach>
		</if>
		</sql>

<select id="findPageByCondOrder" resultMap="${classNameLower}ResultMap" parameterType="${basepackage}.common.pojo.${moduleName}.${className}">
select *
from (select tt.*,rownum as rn from (select
<include refid="Base_Column_List"/>
from ${table.sqlName} t
<include refid="ui_query_condition"/>
<include refid="ui_orderby_condition"/>
) tt
<![CDATA[ WHERE rownum<=${leftbit}pageVO.endIndex${rightbit}) WHERE rn>=${leftbit}pageVO.startIndex${rightbit}]]>
</select>

<select id="findPageByCondOrderCount" parameterType="map" resultType="int">
SELECT count(*) as count FROM ${table.sqlName}
<include refid="ui_query_condition"/>

</select>

<select id="findSameByCond" resultMap="${classNameLower}ResultMap" parameterType="map">
select a.*,t.* from
(( select
<include refid="Base_Column_List"/>
from ${table.sqlName}
<include refid="ui_query_condition"/>)) a,
(( select
<include refid="Base_Column_List"/>
from ${table.sqlName}
<include refid="ui_query_condition"/>)) t
<#if isHasKey==1>where a.${prikey}!=t.${prikey}<#else>where a.${firstprikey}!=t.${firstprikey}</#if>
<include refid="ui_same_condition"/>))
		</select>


<sql id="ui_same_condition">
<if test="samefields!=null and samefields.size()>0">
	<foreach collection="samefields" item="condition" index="index">
		<if test="index==0">
			<if test="condition.relation!=null and condition.relation =='same'">
				<foreach collection="condition.fieldvalue' item="item" index="itemindex">
								<#list table.columns as itemcolumn>
									<if test="item!=null and item=='${itemcolumn.sqlName}'">
				and a.${itemcolumn.sqlName} = t.${itemcolumn.sqlName}
			</if>
		</#list>
	</foreach>
</if>
</if>
		</foreach>
		</if>
		</sql>

<sql id="ui_sumoravg_condition">
<if test="conditions!=null and conditions.size()>0">
	<foreach collection="conditions" item="condition" index="index">
		<if test="condition.relation!=null and condition.relation =='sum'">
			<foreach collection="condition.fieldvalue' item="item" index="itemindex">
								<#list table.columns as itemcolumn>
									<if test="item!=null and item=='${itemcolumn.sqlName}'">
			<if test="itemindex==0">
				sum(${itemcolumn.sqlName}) as ${itemcolumn.sqlName}
			</if>
			<if test="itemindex!=0">
				,sum(${itemcolumn.sqlName}) as ${itemcolumn.sqlName}
			</if>
		</if>
	</#list>
</foreach>
</if>
		</foreach>
		</if>
		</sql>

<select id="findSumOrAvgInfo" resultMap="${classNameLower}ResultMap" parameterType="map">
SELECT
<include refid="Base_Column_List"/>
FROM ${table.sqlName}
<include refid="ui_query_condition"/>
</select>

<select id="selectById" resultMap="${classNameLower}ResultMap" parameterType="java.lang.<#if isHasKey == 1><#if priSqlType=="VARCHAR2"||priSqlType=="NVARCHAR2"||priSqlType=="CHAR">String<#else>Long</#if><#else>Long</#if>">
		select
<include refid="Base_Column_List"/>
		from ${table.sqlName}
<#if isHasKey==1>where ${prikey} = ${leftbit}${pricolumn}${rightbit}<#else>${firstprikey} = ${leftbit}${firstpricolumn}${rightbit}</#if>
		</select>


<select id="findByIds" resultMap="${classNameLower}ResultMap" parameterType="java.util.List">
SELECT
<include refid="Base_Column_List"/>
FROM ${table.sqlName}
<if test="list!=null and list.size()>0">
	<#if isHasKey==1>where ${prikey} in <#else>where ${firstprikey} in</#if>
<foreach collection="list" item="id" index="index" open="(" close=")" separator=",">${leftbit}id${rightbit}</foreach>
</if>
		</select>

<select id="find" resultMap="${classNameLower}ResultMap" parameterType="map">
select
<include refid="Base_Column_List"/>
from ${table.sqlName}
<include refid="ui_query_condition"/>
</select>

<select id="findByPage" resultMap="${classNameLower}ResultMap" parameterType="map">
select * from (select tt.*.rownum as rn from (select
<include refid="Base_Column_List"/>
from ${table.sqlName} t
<include refid="ui_query_condition"/>
<#if isHasKey==1>order by t.${prikey}desc) tt<#else>order by t.${firstprikey} desc) tt</#if>
		<![CDATA[ WHERE rownum<=${leftbit}pageVO.endIndex${rightbit}) WHERE rn>=${leftbit}pageVO.startIndex${rightbit}]]>
		</select>

<select id="findByPageCount" parameterType="map" resultType="int">
SELECT count(*) as count FROM ${table.sqlName}
<include refid="ui_query_condition"/>
</select>

<insert id="insert" parameterType="${basepackage}.common.pojo.${moduleName}.${className}">
<#if priSqlType=="VARCHAR2"||priSqlType=="NVARCHAR2"||priSqlType=="CHAR">
<#else>
<#if isHasKey ==1>
<selectKey keyProperty="${classNameLower}.${pricolumn}" resultType="long" order="BEFORE">
	SELECT ${seqname}.NEXTVAL as ${pricolumn} FROM DUAL
</selectKey>
<#else>
<selectKey keyProperty="${classNameLower}.${firstpricolumn}" resultType="long" order="BEFORE">
	SELECT ${seqname}.NEXTVAL as ${firstpricolumn} FROM DUAL
</selectKey>
</#if>
		</#if>
		INSERT INTO ${table.sqlName}(
<#assign keycount = 0>
<#list table.columns as column>
<#assign keycount = keycount+1>
<#if isHasKey==0 && keycount==1>
<#else>
<#if !column.pk>
<#if column.javaType=="String">
<if test="${column.columnNameLower}!=null and ${column.columnNameLower}!=''">
${column.sqlName},
</if>
<#else>
<if test="${column.columnNameLower}!=null ">
${column.sqlName},
</if>
		</#if>
		</#if>
		</#if>
		</#list>
<#if isHasKey==1>${prikey}<#else>${firstprikey}</#if>
		)
		VALUES
		(
<#assign keycount = 0>
<#list table.columns as column>
<#assign keycount = keycount+1>
<#if isHasKey==0 && keycount==1>
<#else>
<#if !column.pk>
<#if column.javaType=="String">
<if test="${column.columnNameLower}!=null and ${column.columnNameLower}!=''">
${leftbit}${classNameLower}.${column.columnNameLower}${rightbit},
</if>
<#else>
<if test="${column.columnNameLower}!=null ">
${leftbit}${classNameLower}.${column.columnNameLower}${rightbit},
</if>
		</#if>
		</#if>
		</#if>
		</#list>

<#if isHasKey==1>${leftbit}${classNameLower}.${pricolumn}${rightbit}<#else>${leftbit}${classNameLower}.${firstpricolumn}${rightbit}</#if>
		)

		</insert>

<update id="update${className}" parameterType="${basepackage}.common.pojo.${moduleName}.${className}">
update ${table.sqlName}
<set>
	<#assign keycount = 0>
	<#list table.columns as column>
	<#assign keycount = keycount+1>
	<#assign isComm=0>
	<#list commonfieldList as prop>
	<#if column.columnNameLower==prop.name>
	<#assign isComm=1>
</#if>
</#list>
<#if isHasKey==0 && keycount==1>
<#else>
<#if !column.pk>
<#if column.javaType="String">
<if test="${column.columnNameLower}!=null">
${column.sqlName}=${leftbit}${column.columnNameLower}${rightbit},
</if>
<#else>
<#if isComm==1>
<#if column.columnNameLower =="lastModifyTime">
		${column.sqlName} = now(),
<#else>
<if test="${column.columnNameLower}!=null">
${column.sqlName} =${leftbit}${column.columnNameLower}${rightbit},
</if>
		</#if>
<#else>
<if test="${column.columnNameLower}!=null ">
${column.sqlName} =${leftbit}${column.columnNameLower}${rightbit},
</if>
		</#if>
		</#if>
		</#if>
		</#if>
		</#list>
<#if isHasKey==1>${prikey} = ${leftbit}${pricolumn}${rightbit}<#else>${prikey} = ${leftbit}${firstpricolumn}${rightbit}</#if>
		</set>

<#if isHasKey==1>where ${prikey}=${leftbit}${pricolumn}${rightbit}<#else>where ${firstprikey}=${leftbit}${firstpricolumn}${rightbit}</#if>
		</update>

<delete id="deleteById" parameterType="java.lang.<#if isHasKey == 1><#if priSqlType=="VARCHAR2"||priSqlType=="NVARCHAR2"||priSqlType=="CHAR">String<#else>Long</#if><#else>Long</#if>">
		delete from ${table.sqlName} t
<#if isHasKey == 1>
		WHERE ${prikey} = ${leftbit}${pricolumn}${rightbit}
<#else>
		WHERE ${firstprikey} = ${leftbit}${firstpricolumn}${rightbit}
		</#if>
		</delete>
<delete id="deleteById" parameterType="map">
<#if isHasKey == 1>
delete from ${table.sqlName} where ${prikey} in <foreach collection="voList" item="vo" open="(" close=")" separator=",">${leftbit}vo.${pricolumn}${rightbit}</foreach>
<#else>
delete from ${table.sqlName} where ${firstprikey} in <foreach collection="voList" item="vo" open="(" close=")" separator=",">${leftbit}vo.${firstpricolumn}${rightbit}</foreach>
</#if>
		</delete>

<delete id="delete" parameterType="${basepackage}.common.pojo.${moduleName}.${className}">
delete from ${table.sqlName}
<include refid="ui_find_condition"/>
</delete>

<sql id="ui_find_conditon">
<where>
	1 = 1
	<#list table.columns as column>
	<#if column.javaType=="String">
	<if test="${column.columnNameLower}!=null and ${column.columnNameLower}!=''">
		AND ${column.sqlName} =${leftbit}${classNameLower}.${column.columnNameLower}${rightbit}
	</if>
	<#else>
	<if test="${column.columnNameLower}!=null ">
		AND ${column.sqlName} =${leftbit}${classNameLower}.${column.columnNameLower}${rightbit}
	</if>
	</#if>
	</#list>
</where>
</sql>

<select id="findInstanceListInfo" resultMap="${classNameLower}ResultMap" parameterType="${basepackage}.common.pojo.${moduleName}.${className}">
select
<include refid="Base_Column_List"/>
from ${table.sqlName}
<include refid="ui_find_condition"/>

</select>

<select id="findByEntityCount" resultType="int" parameterType="${basepackage}.common.pojo.${moduleName}.${className}">
select count(*) as count FROM ${table.sqlName} t
<include refid="ui_query_condition"/>
</select>

<select id="getSequence" resultType="int">
SELECT ${seqname}.NEXTVAL FROM DUAL
</select>

<delete id="deleteByCond" parameterType="${basepackage}.common.pojo.${moduleName}.${className}">
delete from ${table.sqlName}
<include refid="ui_query_condition"/>
</delete>

		<!--鏍规嵁id鑾峰彇瀵硅薄 -->
	<select id="get${className}ById" parameterType="map"
		resultMap="${classNameLower}ResultMap">
        <![CDATA[
               SELECT * FROM ${table.sqlName} WHERE ID=${leftbit}id${rightbit}
        ]]>
	</select>

	<!--鍒嗛〉鏌ヨ -->
	<select id="get${className}Page" parameterType="map"
		resultMap="${classNameLower}ResultMap">
    	<![CDATA[
               SELECT TSPI.* FROM ${table.sqlName} TSPI
               WHERE 1=1
        ]]>
		<@generateQueryWhere/>
	</select>

    <#if noparent == "0">
	<!--鏍规嵁ID鍒犻櫎瀵硅薄 -->
	<delete id="delete${className}ById" parameterType="map">
        <![CDATA[
               DELETE FROM ${table.sqlName} WHERE ID=${leftbit}id${rightbit}
        ]]>
	</delete>

	<!--鏇存柊绀煎搧淇℃伅 -->
	<update id="update${className}" parameterType="map">
        <![CDATA[
              UPDATE ${table.sqlName}
              SET 
              <@generateUpdate/>
              WHERE ID=${leftbit}id${rightbit}
        ]]>

	</update>

	<insert id="save${className}" parameterType="map">
		INSERT INTO ${table.sqlName} (
		ID
		<@generateSave/>
	</insert>
    </#if>

</mapper>
<#macro generateResultMap>
<#list table.columns as column>
<result property="${column.columnNameLower}" column="${column.sqlName}" />
</#list>
</#macro>
<#macro generateQueryWhere>
<#list table.columns as
column>
<if test="${column.columnNameLower}!=null and ${column.columnNameLower}!=''">
		    <![CDATA[ AND TSPI.${column.sqlName} = ${leftbit}${column.columnNameLower}${rightbit} ]]>
</if>
</#list>
</#macro>

<#macro generateUpdate>
<#list table.columns as column>
<#if table.columns?size!=(column_index+1) && !column.pk>
							${column.sqlName} = ${leftbit}${column.columnNameLower}${rightbit},
</#if>
<#if table.columns?size==(column_index+1)>
							${column.sqlName} = ${leftbit}${column.columnNameLower}${rightbit}
</#if>
</#list>
</#macro>

<#macro generateSave>
<#list table.columns as column>
<#if !column.pk>
		<if test="${column.columnNameLower}!=null and ${column.columnNameLower}!=''">
			,${column.sqlName}
		</if>
</#if>
</#list>
		) VALUES (
${leftbit}id${rightbit}
<#list table.columns as column>
<#if !column.pk>
		<if test="${column.columnNameLower}!=null and ${column.columnNameLower}!=''">
			,${leftbit}${column.columnNameLower}${rightbit}
		</if>
</#if>
</#list>
		)
</#macro>
